[{"/Users/michaelwhelehan/workspace/marketplace/src/App.tsx":"1","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/ConversationConnected.tsx":"2","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/Conversation.ts":"3","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessage.ts":"4","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessageCreate.ts":"5","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessageDelete.ts":"6","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessageUpdate.ts":"7","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessages.ts":"8","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationSubscription.ts":"9","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/CreateConversationMessage.ts":"10","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/DeleteConversationMessage.ts":"11","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/EditConversationMessage.ts":"12","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/mutations.ts":"13","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/queries.ts":"14","/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/useConversationSubscribeMore.ts":"15","/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/CreateTask.tsx":"16","/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/Step1.tsx":"17","/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/Step2.tsx":"18","/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/Step3.tsx":"19","/Users/michaelwhelehan/workspace/marketplace/src/components/FilterForm/useFilterForm.tsx":"20","/Users/michaelwhelehan/workspace/marketplace/src/components/FilterHeader/FilterDropdown.tsx":"21","/Users/michaelwhelehan/workspace/marketplace/src/components/FilterHeader/FilterHeader.tsx":"22","/Users/michaelwhelehan/workspace/marketplace/src/components/Header/Header.tsx":"23","/Users/michaelwhelehan/workspace/marketplace/src/components/Header/Notifications/Notification.tsx":"24","/Users/michaelwhelehan/workspace/marketplace/src/components/Header/Notifications/Notifications.tsx":"25","/Users/michaelwhelehan/workspace/marketplace/src/components/Hire/Hire.tsx":"26","/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/Layout.tsx":"27","/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/gqlTypes/CreateTask.ts":"28","/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/gqlTypes/Hire.ts":"29","/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/gqlTypes/MakeOffer.ts":"30","/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/gqlTypes/RejectOffer.ts":"31","/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/MakeOffer.tsx":"32","/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/Step1.tsx":"33","/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/Step2.tsx":"34","/Users/michaelwhelehan/workspace/marketplace/src/components/PaymentMethods/CreditCardForm.tsx":"35","/Users/michaelwhelehan/workspace/marketplace/src/components/RejectOffer/RejectOffer.tsx":"36","/Users/michaelwhelehan/workspace/marketplace/src/constants/app.ts":"37","/Users/michaelwhelehan/workspace/marketplace/src/constants/breakpoints.ts":"38","/Users/michaelwhelehan/workspace/marketplace/src/constants/sizes.ts":"39","/Users/michaelwhelehan/workspace/marketplace/src/contexts/ScrollElementContext.tsx":"40","/Users/michaelwhelehan/workspace/marketplace/src/core/gqlTypes/PreSignedUploadParams.ts":"41","/Users/michaelwhelehan/workspace/marketplace/src/core/queries.ts":"42","/Users/michaelwhelehan/workspace/marketplace/src/global.d.ts":"43","/Users/michaelwhelehan/workspace/marketplace/src/gqlTypes/SkillTag.ts":"44","/Users/michaelwhelehan/workspace/marketplace/src/gqlTypes/SkillTags.ts":"45","/Users/michaelwhelehan/workspace/marketplace/src/graphql/tasks.ts":"46","/Users/michaelwhelehan/workspace/marketplace/src/hooks/useConfirmDialog.tsx":"47","/Users/michaelwhelehan/workspace/marketplace/src/hooks/useIsMounted.ts":"48","/Users/michaelwhelehan/workspace/marketplace/src/hooks/usePageTracking.ts":"49","/Users/michaelwhelehan/workspace/marketplace/src/hooks/usePrevious.ts":"50","/Users/michaelwhelehan/workspace/marketplace/src/hooks/useTabs.ts":"51","/Users/michaelwhelehan/workspace/marketplace/src/hooks/useUrlQueries.ts":"52","/Users/michaelwhelehan/workspace/marketplace/src/hooks/useWizard.ts":"53","/Users/michaelwhelehan/workspace/marketplace/src/index.tsx":"54","/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/LoginPage.tsx":"55","/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/PasswordResetPage.tsx":"56","/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/RequestPasswordResetPage.tsx":"57","/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/SignUpPage.tsx":"58","/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/gqlTypes/RegisterAccount.ts":"59","/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/gqlTypes/ResetPasswordRequest.ts":"60","/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/mutations.ts":"61","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/DashboardPage.tsx":"62","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/DashboardPageContainer.tsx":"63","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Panels/DashboardFilterPanel.tsx":"64","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Panels/DashboardPanel.tsx":"65","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Panels/DashboardTabPanel.tsx":"66","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/PaymentHistoryPage.tsx":"67","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/sections/BottomFilterPanel.tsx":"68","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/sections/DateFilter.tsx":"69","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/sections/TopFilterPanel.tsx":"70","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/types.ts":"71","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/PaymentMethodsPage.tsx":"72","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/sections/MakePayments.tsx":"73","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/sections/PaymentMethodsHeader.tsx":"74","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/sections/PaymentMethodsTabs.tsx":"75","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/sections/ReceivePayments.tsx":"76","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/types.ts":"77","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/ProfilePage.tsx":"78","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/gqlTypes/UserDetails.ts":"79","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/gqlTypes/UserProfileDetails.ts":"80","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/queries.ts":"81","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/Badges.tsx":"82","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/BasicInfo.tsx":"83","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/ChangeAvatar.tsx":"84","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/Education.tsx":"85","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/Portfolio.tsx":"86","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/ProfileHeader.tsx":"87","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/ProfileTabs.tsx":"88","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/WorkExperience.tsx":"89","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/types.ts":"90","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/SettingsPage.tsx":"91","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/Account.tsx":"92","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/NotificationSettings.tsx":"93","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/Password.tsx":"94","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/SettingsHeader.tsx":"95","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/SettingsTabs.tsx":"96","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/TaskAlerts.tsx":"97","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/types.ts":"98","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/TaskDetailPage.tsx":"99","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Hires/HiresMain.tsx":"100","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Hires/HiresSummary.tsx":"101","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Offers/OffersMain.tsx":"102","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Offers/OffersSummary.tsx":"103","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Progress/ProgressMain.tsx":"104","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Progress/ProgressSummary.tsx":"105","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/TaskDetailHeader.tsx":"106","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/TaskDetailTabs.tsx":"107","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/TaskDetails/TaskDetailsMain.tsx":"108","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/TaskDetails/TaskDetailsSummary.tsx":"109","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/types.ts":"110","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/TasksPage.tsx":"111","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/sections/FilterPanel.tsx":"112","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/types.ts":"113","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/AccountSummary.tsx":"114","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/ActivityFeed.tsx":"115","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/CreditSummary.tsx":"116","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/Navigation.tsx":"117","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/RecentTasks.tsx":"118","/Users/michaelwhelehan/workspace/marketplace/src/pages/Inbox/InboxPage.tsx":"119","/Users/michaelwhelehan/workspace/marketplace/src/pages/Inbox/gqlTypes/ConversationList.ts":"120","/Users/michaelwhelehan/workspace/marketplace/src/pages/Inbox/sections/InboxConversationCard.tsx":"121","/Users/michaelwhelehan/workspace/marketplace/src/pages/Inbox/sections/InboxConversationList.tsx":"122","/Users/michaelwhelehan/workspace/marketplace/src/pages/InboxConversation/InboxConversationPage.tsx":"123","/Users/michaelwhelehan/workspace/marketplace/src/pages/InboxConversation/sections/InboxConversationDetails.tsx":"124","/Users/michaelwhelehan/workspace/marketplace/src/pages/InboxConversation/sections/InboxConversationTitle.tsx":"125","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/MarketplacePage.tsx":"126","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/Task.ts":"127","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/Tasks.ts":"128","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/queries.ts":"129","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/sections/Map.tsx":"130","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/sections/SideList.tsx":"131","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/sections/SideListCard.tsx":"132","/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/TaskDetailPage.tsx":"133","/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/gqlTypes/Task.ts":"134","/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/queries.ts":"135","/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/sections/TDPHeader.tsx":"136","/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/sections/TDPOffers.tsx":"137","/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/sections/TDPQuestions.tsx":"138","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/ProfilePage.tsx":"139","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/gqlTypes/PublicUserProfile.ts":"140","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/gqlTypes/SkillTag.ts":"141","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/queries.ts":"142","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/Educations.tsx":"143","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/InfoPanel.tsx":"144","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/MainPanel.tsx":"145","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/Portfolios.tsx":"146","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/ReviewPanel.tsx":"147","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/Skills.tsx":"148","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/UserPanel.tsx":"149","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/WorkExperiences.tsx":"150","/Users/michaelwhelehan/workspace/marketplace/src/queries.ts":"151","/Users/michaelwhelehan/workspace/marketplace/src/react-app-env.d.ts":"152","/Users/michaelwhelehan/workspace/marketplace/src/routes.tsx":"153","/Users/michaelwhelehan/workspace/marketplace/src/services/api/APIProxy.ts":"154","/Users/michaelwhelehan/workspace/marketplace/src/services/api/Auth/index.ts":"155","/Users/michaelwhelehan/workspace/marketplace/src/services/api/Auth/types.ts":"156","/Users/michaelwhelehan/workspace/marketplace/src/services/api/index.ts":"157","/Users/michaelwhelehan/workspace/marketplace/src/services/api/types.ts":"158","/Users/michaelwhelehan/workspace/marketplace/src/services/auth.ts":"159","/Users/michaelwhelehan/workspace/marketplace/src/services/cache.ts":"160","/Users/michaelwhelehan/workspace/marketplace/src/services/client.ts":"161","/Users/michaelwhelehan/workspace/marketplace/src/services/config.ts":"162","/Users/michaelwhelehan/workspace/marketplace/src/services/data/ApolloClientManager/index.ts":"163","/Users/michaelwhelehan/workspace/marketplace/src/services/data/ApolloClientManager/types.ts":"164","/Users/michaelwhelehan/workspace/marketplace/src/services/data/index.ts":"165","/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/auth.ts":"166","/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/errors.ts":"167","/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/gqlTypes/AccountError.ts":"168","/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/gqlTypes/User.ts":"169","/Users/michaelwhelehan/workspace/marketplace/src/services/gqlTypes/globalTypes.ts":"170","/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/ErrorListener/index.ts":"171","/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/ErrorListener/types.ts":"172","/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/LocalStorageHandler/LocalStorageHandler.ts":"173","/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/LocalStorageHandler/Proxy.ts":"174","/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/LocalStorageHandler/index.ts":"175","/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/LocalStorageHandler/types.ts":"176","/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/NamedObservable/index.ts":"177","/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/NamedObservable/types.ts":"178","/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/index.ts":"179","/Users/michaelwhelehan/workspace/marketplace/src/services/index.ts":"180","/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Auth/AuthJobs.ts":"181","/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Auth/index.ts":"182","/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Jobs.ts":"183","/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/JobsManager.ts":"184","/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/index.ts":"185","/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/types.ts":"186","/Users/michaelwhelehan/workspace/marketplace/src/services/links.ts":"187","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/auth.ts":"188","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/AccountUpdate.ts":"189","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/PasswordChange.ts":"190","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/SetPassword.ts":"191","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/TokenAuth.ts":"192","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/VerifyToken.ts":"193","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/index.ts":"194","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/user.ts":"195","/Users/michaelwhelehan/workspace/marketplace/src/services/queries/gqlTypes/UserDetails.ts":"196","/Users/michaelwhelehan/workspace/marketplace/src/services/queries/user.ts":"197","/Users/michaelwhelehan/workspace/marketplace/src/services/react/components/MarketplaceProvider/MarketplaceProvider.tsx":"198","/Users/michaelwhelehan/workspace/marketplace/src/services/react/components/MarketplaceProvider/index.ts":"199","/Users/michaelwhelehan/workspace/marketplace/src/services/react/components/MarketplaceProvider/types.ts":"200","/Users/michaelwhelehan/workspace/marketplace/src/services/react/components/index.ts":"201","/Users/michaelwhelehan/workspace/marketplace/src/services/react/context.tsx":"202","/Users/michaelwhelehan/workspace/marketplace/src/services/react/helpers.ts":"203","/Users/michaelwhelehan/workspace/marketplace/src/services/react/hooks.ts":"204","/Users/michaelwhelehan/workspace/marketplace/src/services/react/index.ts":"205","/Users/michaelwhelehan/workspace/marketplace/src/services/react/mutations.ts":"206","/Users/michaelwhelehan/workspace/marketplace/src/services/react/types.ts":"207","/Users/michaelwhelehan/workspace/marketplace/src/services/react/useHook.ts":"208","/Users/michaelwhelehan/workspace/marketplace/src/services/react/useMutation.ts":"209","/Users/michaelwhelehan/workspace/marketplace/src/services/react/useQuery.ts":"210","/Users/michaelwhelehan/workspace/marketplace/src/services/state/index.ts":"211","/Users/michaelwhelehan/workspace/marketplace/src/services/state/types.ts":"212","/Users/michaelwhelehan/workspace/marketplace/src/services/tsHelpers.ts":"213","/Users/michaelwhelehan/workspace/marketplace/src/services/types.ts":"214","/Users/michaelwhelehan/workspace/marketplace/src/services/utils.ts":"215","/Users/michaelwhelehan/workspace/marketplace/src/setupTests.ts":"216","/Users/michaelwhelehan/workspace/marketplace/src/styles/colors.ts":"217","/Users/michaelwhelehan/workspace/marketplace/src/styles/global.ts":"218","/Users/michaelwhelehan/workspace/marketplace/src/styles/shadows.ts":"219","/Users/michaelwhelehan/workspace/marketplace/src/styles/typography.ts":"220","/Users/michaelwhelehan/workspace/marketplace/src/types/conversation.ts":"221","/Users/michaelwhelehan/workspace/marketplace/src/types/currency.ts":"222","/Users/michaelwhelehan/workspace/marketplace/src/types/offer.ts":"223","/Users/michaelwhelehan/workspace/marketplace/src/types/review.ts":"224","/Users/michaelwhelehan/workspace/marketplace/src/types/tab.ts":"225","/Users/michaelwhelehan/workspace/marketplace/src/types/task.ts":"226","/Users/michaelwhelehan/workspace/marketplace/src/types/user.ts":"227","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Avatar.tsx":"228","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Button.tsx":"229","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/CheckboxField.tsx":"230","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Container.tsx":"231","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/DateField.tsx":"232","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/DropDown.tsx":"233","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/FileUploadField.tsx":"234","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Headings.tsx":"235","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Icon.tsx":"236","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/LineBreak.tsx":"237","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Loader/Loader.tsx":"238","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Loader/custom/Dashboard.tsx":"239","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Logo.tsx":"240","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/MapMarker.tsx":"241","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Paragraphs.tsx":"242","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/ProgressBar.tsx":"243","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/RadioField.tsx":"244","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Rating.tsx":"245","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/RoleToggle.tsx":"246","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/SelectField.tsx":"247","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/SliderField.tsx":"248","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/StatusIndicator.tsx":"249","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Tab.tsx":"250","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/TaskStatusIndicator.tsx":"251","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/TextAreaField.tsx":"252","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/TextField.tsx":"253","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/UpdateIndicator.tsx":"254","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/UserName.tsx":"255","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/ConfirmDialog.tsx":"256","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/FieldContainer.tsx":"257","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/FormField.tsx":"258","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/HireCard.tsx":"259","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/InfiniteList.tsx":"260","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/Modal.tsx":"261","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/Review.tsx":"262","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/ReviewSummary.tsx":"263","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/TaskDetail/TDPAttachments.tsx":"264","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/TaskDetail/TDPDetails.tsx":"265","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/TaskDetail/TDPInfo.tsx":"266","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/TextFieldIcon.tsx":"267","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/UserCard.tsx":"268","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/UserStats.tsx":"269","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/WindowedList.tsx":"270","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/WindowedTable.tsx":"271","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/Conversation.tsx":"272","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/ConversationMessage.tsx":"273","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/ConversationMessageList.tsx":"274","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/ConversationTextField.tsx":"275","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/gqlTypes/Message.ts":"276","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/gqlTypes/MessageFeed.ts":"277","/Users/michaelwhelehan/workspace/marketplace/src/utils/compare.ts":"278","/Users/michaelwhelehan/workspace/marketplace/src/utils/date.ts":"279","/Users/michaelwhelehan/workspace/marketplace/src/utils/format.ts":"280","/Users/michaelwhelehan/workspace/marketplace/src/utils/graphql.ts":"281","/Users/michaelwhelehan/workspace/marketplace/src/utils/helpers.ts":"282","/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/gqlTypes/TaskCreate.ts":"283","/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/mutations.ts":"284","/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Task/TaskJobs.ts":"285","/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Task/index.ts":"286","/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Task/types.ts":"287","/Users/michaelwhelehan/workspace/marketplace/src/services/api/Task/index.ts":"288","/Users/michaelwhelehan/workspace/marketplace/src/services/api/Task/types.ts":"289","/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/gqlTypes/TaskCreated.ts":"290","/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/gqlTypes/TaskUpdate.ts":"291","/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/gqlTypes/TaskUpdated.ts":"292","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/sections/UpdateTasks.tsx":"293","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/useTaskSubscribeMore.ts":"294","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/DeleteTask.ts":"295","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/EditTask.ts":"296","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/PublishTask.ts":"297","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/TaskSubscription.ts":"298","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/TaskEdges.ts":"299","/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/mutations.ts":"300","/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/types.ts":"301","/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/gqlTypes/OfferMade.ts":"302","/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/gqlTypes/OfferCreate.ts":"303","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/Offer.ts":"304","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/Offers.ts":"305","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Loader/custom/Offers.tsx":"306","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/gqlTypes/UserTask.ts":"307","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/gqlTypes/UserTasks.ts":"308","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/queries.ts":"309","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Questions/QuestionsMain.tsx":"310","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Offers/OfferCard.tsx":"311","/Users/michaelwhelehan/workspace/marketplace/src/components/Header/gqlTypes/Activity.ts":"312","/Users/michaelwhelehan/workspace/marketplace/src/components/Header/gqlTypes/UserActivity.ts":"313","/Users/michaelwhelehan/workspace/marketplace/src/components/Header/queries.ts":"314","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/gqlTypes/PublicUserDetails.ts":"315","/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/gqlTypes/PublicUserBasic.ts":"316","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/AccountNotificationsUpdate.ts":"317","/Users/michaelwhelehan/workspace/marketplace/src/components/Header/gqlTypes/ActivityUpdate.ts":"318","/Users/michaelwhelehan/workspace/marketplace/src/components/Header/mutations.ts":"319"},{"size":433,"mtime":1603560230557,"results":"320","hashOfConfig":"321"},{"size":4827,"mtime":1609886599589,"results":"322","hashOfConfig":"321"},{"size":2856,"mtime":1610287811336,"results":"323","hashOfConfig":"321"},{"size":898,"mtime":1610287811344,"results":"324","hashOfConfig":"321"},{"size":1602,"mtime":1610287811333,"results":"325","hashOfConfig":"321"},{"size":954,"mtime":1610287811335,"results":"326","hashOfConfig":"321"},{"size":1558,"mtime":1610287811334,"results":"327","hashOfConfig":"321"},{"size":2366,"mtime":1608296778896,"results":"328","hashOfConfig":"321"},{"size":3646,"mtime":1610287811337,"results":"329","hashOfConfig":"321"},{"size":1157,"mtime":1610287811344,"results":"330","hashOfConfig":"321"},{"size":640,"mtime":1610287811345,"results":"331","hashOfConfig":"321"},{"size":669,"mtime":1610287811344,"results":"332","hashOfConfig":"321"},{"size":4454,"mtime":1610277282854,"results":"333","hashOfConfig":"321"},{"size":2574,"mtime":1609949320389,"results":"334","hashOfConfig":"321"},{"size":3400,"mtime":1609685076923,"results":"335","hashOfConfig":"321"},{"size":2239,"mtime":1609370225118,"results":"336","hashOfConfig":"321"},{"size":4849,"mtime":1609508091634,"results":"337","hashOfConfig":"321"},{"size":6250,"mtime":1609508204382,"results":"338","hashOfConfig":"321"},{"size":6059,"mtime":1609761239783,"results":"339","hashOfConfig":"321"},{"size":3690,"mtime":1609072348112,"results":"340","hashOfConfig":"321"},{"size":2916,"mtime":1600523328076,"results":"341","hashOfConfig":"321"},{"size":2334,"mtime":1609771585263,"results":"342","hashOfConfig":"321"},{"size":6338,"mtime":1610288036897,"results":"343","hashOfConfig":"321"},{"size":3396,"mtime":1610288110594,"results":"344","hashOfConfig":"321"},{"size":1037,"mtime":1610288073613,"results":"345","hashOfConfig":"321"},{"size":3892,"mtime":1605799512375,"results":"346","hashOfConfig":"321"},{"size":2567,"mtime":1609765740709,"results":"347","hashOfConfig":"321"},{"size":345,"mtime":1610287811339,"results":"348","hashOfConfig":"321"},{"size":327,"mtime":1610287811339,"results":"349","hashOfConfig":"321"},{"size":376,"mtime":1610287811339,"results":"350","hashOfConfig":"321"},{"size":348,"mtime":1610287811339,"results":"351","hashOfConfig":"321"},{"size":2224,"mtime":1609765738527,"results":"352","hashOfConfig":"321"},{"size":2370,"mtime":1609765854247,"results":"353","hashOfConfig":"321"},{"size":2003,"mtime":1609766033838,"results":"354","hashOfConfig":"321"},{"size":1213,"mtime":1591798584334,"results":"355","hashOfConfig":"321"},{"size":2055,"mtime":1591803998333,"results":"356","hashOfConfig":"321"},{"size":471,"mtime":1608474991045,"results":"357","hashOfConfig":"321"},{"size":321,"mtime":1600523328079,"results":"358","hashOfConfig":"321"},{"size":114,"mtime":1591798584334,"results":"359","hashOfConfig":"321"},{"size":626,"mtime":1591798584335,"results":"360","hashOfConfig":"321"},{"size":856,"mtime":1610287811340,"results":"361","hashOfConfig":"321"},{"size":2781,"mtime":1608673722454,"results":"362","hashOfConfig":"321"},{"size":154,"mtime":1603560053357,"results":"363","hashOfConfig":"321"},{"size":392,"mtime":1610287811348,"results":"364","hashOfConfig":"321"},{"size":848,"mtime":1610287811342,"results":"365","hashOfConfig":"321"},{"size":356,"mtime":1609765773138,"results":"366","hashOfConfig":"321"},{"size":847,"mtime":1608986192980,"results":"367","hashOfConfig":"321"},{"size":242,"mtime":1591798584336,"results":"368","hashOfConfig":"321"},{"size":706,"mtime":1603621863177,"results":"369","hashOfConfig":"321"},{"size":195,"mtime":1591798584336,"results":"370","hashOfConfig":"321"},{"size":849,"mtime":1609977422622,"results":"371","hashOfConfig":"321"},{"size":1032,"mtime":1600523328082,"results":"372","hashOfConfig":"321"},{"size":664,"mtime":1591798584337,"results":"373","hashOfConfig":"321"},{"size":1696,"mtime":1608474992139,"results":"374","hashOfConfig":"321"},{"size":3346,"mtime":1602941099151,"results":"375","hashOfConfig":"321"},{"size":3635,"mtime":1602941131164,"results":"376","hashOfConfig":"321"},{"size":3205,"mtime":1602941125601,"results":"377","hashOfConfig":"321"},{"size":4357,"mtime":1602941142721,"results":"378","hashOfConfig":"321"},{"size":1161,"mtime":1610287811340,"results":"379","hashOfConfig":"321"},{"size":1129,"mtime":1610287811340,"results":"380","hashOfConfig":"321"},{"size":1704,"mtime":1600523328085,"results":"381","hashOfConfig":"321"},{"size":3524,"mtime":1600523328085,"results":"382","hashOfConfig":"321"},{"size":393,"mtime":1592409824929,"results":"383","hashOfConfig":"321"},{"size":240,"mtime":1591799553439,"results":"384","hashOfConfig":"321"},{"size":1220,"mtime":1591799553439,"results":"385","hashOfConfig":"321"},{"size":250,"mtime":1591798584339,"results":"386","hashOfConfig":"321"},{"size":4761,"mtime":1609972700011,"results":"387","hashOfConfig":"321"},{"size":1309,"mtime":1591798584339,"results":"388","hashOfConfig":"321"},{"size":1599,"mtime":1591798584340,"results":"389","hashOfConfig":"321"},{"size":918,"mtime":1591798584340,"results":"390","hashOfConfig":"321"},{"size":44,"mtime":1591798584340,"results":"391","hashOfConfig":"321"},{"size":1117,"mtime":1609972716372,"results":"392","hashOfConfig":"321"},{"size":2146,"mtime":1602163839410,"results":"393","hashOfConfig":"321"},{"size":632,"mtime":1591798584341,"results":"394","hashOfConfig":"321"},{"size":1100,"mtime":1591798584341,"results":"395","hashOfConfig":"321"},{"size":4127,"mtime":1600523328086,"results":"396","hashOfConfig":"321"},{"size":77,"mtime":1591798584341,"results":"397","hashOfConfig":"321"},{"size":1592,"mtime":1609972760514,"results":"398","hashOfConfig":"321"},{"size":2301,"mtime":1610287811347,"results":"399","hashOfConfig":"321"},{"size":2580,"mtime":1610287811340,"results":"400","hashOfConfig":"321"},{"size":1058,"mtime":1610277567730,"results":"401","hashOfConfig":"321"},{"size":3502,"mtime":1592409824931,"results":"402","hashOfConfig":"321"},{"size":11327,"mtime":1610275960323,"results":"403","hashOfConfig":"321"},{"size":2456,"mtime":1600523328089,"results":"404","hashOfConfig":"321"},{"size":8201,"mtime":1609158645218,"results":"405","hashOfConfig":"321"},{"size":6929,"mtime":1603558572585,"results":"406","hashOfConfig":"321"},{"size":1496,"mtime":1600523328091,"results":"407","hashOfConfig":"321"},{"size":1258,"mtime":1592409824932,"results":"408","hashOfConfig":"321"},{"size":10801,"mtime":1603558525479,"results":"409","hashOfConfig":"321"},{"size":104,"mtime":1592409824932,"results":"410","hashOfConfig":"321"},{"size":1151,"mtime":1609972775069,"results":"411","hashOfConfig":"321"},{"size":644,"mtime":1592409824933,"results":"412","hashOfConfig":"321"},{"size":3801,"mtime":1609888970641,"results":"413","hashOfConfig":"321"},{"size":1607,"mtime":1592409824934,"results":"414","hashOfConfig":"321"},{"size":611,"mtime":1592409824934,"results":"415","hashOfConfig":"321"},{"size":1174,"mtime":1609888885923,"results":"416","hashOfConfig":"321"},{"size":998,"mtime":1609888903372,"results":"417","hashOfConfig":"321"},{"size":95,"mtime":1592409824935,"results":"418","hashOfConfig":"321"},{"size":4164,"mtime":1609977236841,"results":"419","hashOfConfig":"321"},{"size":650,"mtime":1609887923901,"results":"420","hashOfConfig":"321"},{"size":1090,"mtime":1591799553440,"results":"421","hashOfConfig":"321"},{"size":2845,"mtime":1609888008312,"results":"422","hashOfConfig":"321"},{"size":1083,"mtime":1602164362269,"results":"423","hashOfConfig":"321"},{"size":2134,"mtime":1608288409428,"results":"424","hashOfConfig":"321"},{"size":1416,"mtime":1600523328091,"results":"425","hashOfConfig":"321"},{"size":1321,"mtime":1609952654953,"results":"426","hashOfConfig":"321"},{"size":2017,"mtime":1609977104166,"results":"427","hashOfConfig":"321"},{"size":948,"mtime":1609884839511,"results":"428","hashOfConfig":"321"},{"size":515,"mtime":1591799553442,"results":"429","hashOfConfig":"321"},{"size":80,"mtime":1609956003853,"results":"430","hashOfConfig":"321"},{"size":3582,"mtime":1609972796589,"results":"431","hashOfConfig":"321"},{"size":1820,"mtime":1591798584346,"results":"432","hashOfConfig":"321"},{"size":114,"mtime":1591798584346,"results":"433","hashOfConfig":"321"},{"size":3016,"mtime":1602163937777,"results":"434","hashOfConfig":"321"},{"size":2558,"mtime":1605799512235,"results":"435","hashOfConfig":"321"},{"size":1351,"mtime":1591798584347,"results":"436","hashOfConfig":"321"},{"size":1984,"mtime":1600523328092,"results":"437","hashOfConfig":"321"},{"size":3476,"mtime":1605799512226,"results":"438","hashOfConfig":"321"},{"size":5532,"mtime":1608286511725,"results":"439","hashOfConfig":"321"},{"size":1311,"mtime":1608057897210,"results":"440","hashOfConfig":"321"},{"size":1895,"mtime":1591798584347,"results":"441","hashOfConfig":"321"},{"size":1136,"mtime":1591798584348,"results":"442","hashOfConfig":"321"},{"size":1890,"mtime":1608288433725,"results":"443","hashOfConfig":"321"},{"size":678,"mtime":1591798584348,"results":"444","hashOfConfig":"321"},{"size":1121,"mtime":1591798584348,"results":"445","hashOfConfig":"321"},{"size":3576,"mtime":1609878117418,"results":"446","hashOfConfig":"321"},{"size":1319,"mtime":1610287811347,"results":"447","hashOfConfig":"321"},{"size":2461,"mtime":1610287811341,"results":"448","hashOfConfig":"321"},{"size":2606,"mtime":1609951575830,"results":"449","hashOfConfig":"321"},{"size":2733,"mtime":1603130224092,"results":"450","hashOfConfig":"321"},{"size":1337,"mtime":1609519926229,"results":"451","hashOfConfig":"321"},{"size":3884,"mtime":1609764072300,"results":"452","hashOfConfig":"321"},{"size":3265,"mtime":1609880986986,"results":"453","hashOfConfig":"321"},{"size":1497,"mtime":1610287811342,"results":"454","hashOfConfig":"321"},{"size":459,"mtime":1609767222314,"results":"455","hashOfConfig":"321"},{"size":1599,"mtime":1609771839781,"results":"456","hashOfConfig":"321"},{"size":2433,"mtime":1609888404828,"results":"457","hashOfConfig":"321"},{"size":1059,"mtime":1609760034450,"results":"458","hashOfConfig":"321"},{"size":1659,"mtime":1600523328097,"results":"459","hashOfConfig":"321"},{"size":2664,"mtime":1610287811342,"results":"460","hashOfConfig":"321"},{"size":392,"mtime":1608940552792,"results":"461","hashOfConfig":"321"},{"size":1273,"mtime":1609888726502,"results":"462","hashOfConfig":"321"},{"size":1150,"mtime":1600523328099,"results":"463","hashOfConfig":"321"},{"size":836,"mtime":1600523328099,"results":"464","hashOfConfig":"321"},{"size":1404,"mtime":1600523328099,"results":"465","hashOfConfig":"321"},{"size":1202,"mtime":1600523328099,"results":"466","hashOfConfig":"321"},{"size":7396,"mtime":1609972836939,"results":"467","hashOfConfig":"321"},{"size":730,"mtime":1592576795925,"results":"468","hashOfConfig":"321"},{"size":1315,"mtime":1600523328100,"results":"469","hashOfConfig":"321"},{"size":1740,"mtime":1600523328100,"results":"470","hashOfConfig":"321"},{"size":481,"mtime":1609072183968,"results":"471","hashOfConfig":"321"},{"size":242,"mtime":1603556468973,"results":"472","hashOfConfig":"321"},{"size":2473,"mtime":1609971130216,"results":"473","hashOfConfig":"321"},{"size":9278,"mtime":1610279208544,"results":"474","hashOfConfig":"321"},{"size":4431,"mtime":1600523328101,"results":"475","hashOfConfig":"321"},{"size":62,"mtime":1600523328101,"results":"476","hashOfConfig":"321"},{"size":1658,"mtime":1609155995706,"results":"477","hashOfConfig":"321"},{"size":981,"mtime":1600523328101,"results":"478","hashOfConfig":"321"},{"size":1407,"mtime":1600523328101,"results":"479","hashOfConfig":"321"},{"size":974,"mtime":1608929733526,"results":"480","hashOfConfig":"321"},{"size":387,"mtime":1608474978972,"results":"481","hashOfConfig":"321"},{"size":143,"mtime":1609157733944,"results":"482","hashOfConfig":"321"},{"size":1864,"mtime":1600523328102,"results":"483","hashOfConfig":"321"},{"size":259,"mtime":1600523328102,"results":"484","hashOfConfig":"321"},{"size":38,"mtime":1600523328102,"results":"485","hashOfConfig":"321"},{"size":384,"mtime":1610275725565,"results":"486","hashOfConfig":"321"},{"size":158,"mtime":1600523328102,"results":"487","hashOfConfig":"321"},{"size":693,"mtime":1610287811348,"results":"488","hashOfConfig":"321"},{"size":543,"mtime":1610287811348,"results":"489","hashOfConfig":"321"},{"size":1779,"mtime":1600523328103,"results":"490","hashOfConfig":"321"},{"size":1013,"mtime":1600523328103,"results":"491","hashOfConfig":"321"},{"size":289,"mtime":1600523328103,"results":"492","hashOfConfig":"321"},{"size":659,"mtime":1609110082907,"results":"493","hashOfConfig":"321"},{"size":2169,"mtime":1600523328103,"results":"494","hashOfConfig":"321"},{"size":62,"mtime":1600523328103,"results":"495","hashOfConfig":"321"},{"size":360,"mtime":1609370558149,"results":"496","hashOfConfig":"321"},{"size":1216,"mtime":1600523328104,"results":"497","hashOfConfig":"321"},{"size":305,"mtime":1600523328104,"results":"498","hashOfConfig":"321"},{"size":104,"mtime":1600523328104,"results":"499","hashOfConfig":"321"},{"size":1305,"mtime":1600523328104,"results":"500","hashOfConfig":"321"},{"size":1614,"mtime":1600523328104,"results":"501","hashOfConfig":"321"},{"size":27,"mtime":1600523328104,"results":"502","hashOfConfig":"321"},{"size":578,"mtime":1609110399875,"results":"503","hashOfConfig":"321"},{"size":1148,"mtime":1600523328104,"results":"504","hashOfConfig":"321"},{"size":30,"mtime":1600523328104,"results":"505","hashOfConfig":"321"},{"size":365,"mtime":1600523328105,"results":"506","hashOfConfig":"321"},{"size":1562,"mtime":1609683085040,"results":"507","hashOfConfig":"321"},{"size":574,"mtime":1600523328105,"results":"508","hashOfConfig":"321"},{"size":3383,"mtime":1610287811343,"results":"509","hashOfConfig":"321"},{"size":1108,"mtime":1610287811343,"results":"510","hashOfConfig":"321"},{"size":2025,"mtime":1610287811344,"results":"511","hashOfConfig":"321"},{"size":1300,"mtime":1610287811342,"results":"512","hashOfConfig":"321"},{"size":795,"mtime":1610287811343,"results":"513","hashOfConfig":"321"},{"size":2052,"mtime":1610284722638,"results":"514","hashOfConfig":"321"},{"size":1578,"mtime":1610283856449,"results":"515","hashOfConfig":"321"},{"size":688,"mtime":1610287811344,"results":"516","hashOfConfig":"321"},{"size":203,"mtime":1600523328106,"results":"517","hashOfConfig":"321"},{"size":2508,"mtime":1608474990207,"results":"518","hashOfConfig":"321"},{"size":38,"mtime":1600523328107,"results":"519","hashOfConfig":"321"},{"size":263,"mtime":1600523328107,"results":"520","hashOfConfig":"321"},{"size":38,"mtime":1600523328107,"results":"521","hashOfConfig":"321"},{"size":156,"mtime":1600523328107,"results":"522","hashOfConfig":"321"},{"size":460,"mtime":1600523328107,"results":"523","hashOfConfig":"321"},{"size":127,"mtime":1609110416649,"results":"524","hashOfConfig":"321"},{"size":107,"mtime":1600523328107,"results":"525","hashOfConfig":"321"},{"size":365,"mtime":1610278866778,"results":"526","hashOfConfig":"321"},{"size":824,"mtime":1600523328108,"results":"527","hashOfConfig":"321"},{"size":417,"mtime":1600523328108,"results":"528","hashOfConfig":"321"},{"size":3875,"mtime":1600523328108,"results":"529","hashOfConfig":"321"},{"size":3590,"mtime":1600523328108,"results":"530","hashOfConfig":"321"},{"size":3391,"mtime":1609189484161,"results":"531","hashOfConfig":"321"},{"size":70,"mtime":1609155611968,"results":"532","hashOfConfig":"321"},{"size":462,"mtime":1608474988848,"results":"533","hashOfConfig":"321"},{"size":1584,"mtime":1609157718317,"results":"534","hashOfConfig":"321"},{"size":1347,"mtime":1600523328109,"results":"535","hashOfConfig":"321"},{"size":255,"mtime":1591798584350,"results":"536","hashOfConfig":"321"},{"size":489,"mtime":1605795654446,"results":"537","hashOfConfig":"321"},{"size":1526,"mtime":1591798584350,"results":"538","hashOfConfig":"321"},{"size":128,"mtime":1591798584350,"results":"539","hashOfConfig":"321"},{"size":1065,"mtime":1591798584351,"results":"540","hashOfConfig":"321"},{"size":684,"mtime":1591798584351,"results":"541","hashOfConfig":"321"},{"size":52,"mtime":1602163989176,"results":"542","hashOfConfig":"321"},{"size":248,"mtime":1591798584351,"results":"543","hashOfConfig":"321"},{"size":197,"mtime":1600523321657,"results":"544","hashOfConfig":"321"},{"size":96,"mtime":1591798584351,"results":"545","hashOfConfig":"321"},{"size":639,"mtime":1609885827436,"results":"546","hashOfConfig":"321"},{"size":251,"mtime":1591798584352,"results":"547","hashOfConfig":"321"},{"size":1257,"mtime":1608297682774,"results":"548","hashOfConfig":"321"},{"size":1767,"mtime":1600523328110,"results":"549","hashOfConfig":"321"},{"size":1520,"mtime":1592409824936,"results":"550","hashOfConfig":"321"},{"size":214,"mtime":1600523328110,"results":"551","hashOfConfig":"321"},{"size":883,"mtime":1609188436259,"results":"552","hashOfConfig":"321"},{"size":2675,"mtime":1609064056118,"results":"553","hashOfConfig":"321"},{"size":3765,"mtime":1600523328110,"results":"554","hashOfConfig":"321"},{"size":1670,"mtime":1591798584353,"results":"555","hashOfConfig":"321"},{"size":1583,"mtime":1591798584353,"results":"556","hashOfConfig":"321"},{"size":218,"mtime":1608721689905,"results":"557","hashOfConfig":"321"},{"size":630,"mtime":1609768079437,"results":"558","hashOfConfig":"321"},{"size":3927,"mtime":1600523328111,"results":"559","hashOfConfig":"321"},{"size":302,"mtime":1605795719900,"results":"560","hashOfConfig":"321"},{"size":864,"mtime":1591798584353,"results":"561","hashOfConfig":"321"},{"size":1057,"mtime":1591798584353,"results":"562","hashOfConfig":"321"},{"size":1424,"mtime":1591798584354,"results":"563","hashOfConfig":"321"},{"size":1489,"mtime":1591798584354,"results":"564","hashOfConfig":"321"},{"size":784,"mtime":1591798584354,"results":"565","hashOfConfig":"321"},{"size":722,"mtime":1591798584354,"results":"566","hashOfConfig":"321"},{"size":541,"mtime":1602943623287,"results":"567","hashOfConfig":"321"},{"size":2612,"mtime":1602160901562,"results":"568","hashOfConfig":"321"},{"size":569,"mtime":1591798584354,"results":"569","hashOfConfig":"321"},{"size":1342,"mtime":1591798584355,"results":"570","hashOfConfig":"321"},{"size":1115,"mtime":1609885921658,"results":"571","hashOfConfig":"321"},{"size":1219,"mtime":1609101747639,"results":"572","hashOfConfig":"321"},{"size":1627,"mtime":1609101729605,"results":"573","hashOfConfig":"321"},{"size":915,"mtime":1591798584355,"results":"574","hashOfConfig":"321"},{"size":230,"mtime":1591798584355,"results":"575","hashOfConfig":"321"},{"size":978,"mtime":1608986394324,"results":"576","hashOfConfig":"321"},{"size":453,"mtime":1591798584355,"results":"577","hashOfConfig":"321"},{"size":2794,"mtime":1609344827710,"results":"578","hashOfConfig":"321"},{"size":3200,"mtime":1591803144633,"results":"579","hashOfConfig":"321"},{"size":5377,"mtime":1600523328113,"results":"580","hashOfConfig":"321"},{"size":3119,"mtime":1600523328114,"results":"581","hashOfConfig":"321"},{"size":1762,"mtime":1600523353018,"results":"582","hashOfConfig":"321"},{"size":2161,"mtime":1592576795926,"results":"583","hashOfConfig":"321"},{"size":1146,"mtime":1591798584357,"results":"584","hashOfConfig":"321"},{"size":644,"mtime":1591798584357,"results":"585","hashOfConfig":"321"},{"size":5134,"mtime":1609952672266,"results":"586","hashOfConfig":"321"},{"size":1130,"mtime":1600523328114,"results":"587","hashOfConfig":"321"},{"size":1968,"mtime":1609888113172,"results":"588","hashOfConfig":"321"},{"size":1237,"mtime":1591798584357,"results":"589","hashOfConfig":"321"},{"size":2766,"mtime":1608915605807,"results":"590","hashOfConfig":"321"},{"size":2485,"mtime":1591798584358,"results":"591","hashOfConfig":"321"},{"size":1780,"mtime":1609759976201,"results":"592","hashOfConfig":"321"},{"size":9394,"mtime":1609104741280,"results":"593","hashOfConfig":"321"},{"size":3378,"mtime":1608985764050,"results":"594","hashOfConfig":"321"},{"size":2358,"mtime":1609759903997,"results":"595","hashOfConfig":"321"},{"size":1158,"mtime":1608057897213,"results":"596","hashOfConfig":"321"},{"size":1436,"mtime":1608057897214,"results":"597","hashOfConfig":"321"},{"size":116,"mtime":1591798584358,"results":"598","hashOfConfig":"321"},{"size":1358,"mtime":1610277130835,"results":"599","hashOfConfig":"321"},{"size":129,"mtime":1600523328115,"results":"600","hashOfConfig":"321"},{"size":362,"mtime":1609521836375,"results":"601","hashOfConfig":"321"},{"size":394,"mtime":1608984634328,"results":"602","hashOfConfig":"321"},{"size":1630,"mtime":1610287811337,"results":"603","hashOfConfig":"321"},{"size":1543,"mtime":1609949360808,"results":"604","hashOfConfig":"321"},{"size":951,"mtime":1609370381436,"results":"605","hashOfConfig":"321"},{"size":27,"mtime":1609110230878,"results":"606","hashOfConfig":"321"},{"size":292,"mtime":1609345281021,"results":"607","hashOfConfig":"321"},{"size":1881,"mtime":1609370399817,"results":"608","hashOfConfig":"321"},{"size":226,"mtime":1609345055670,"results":"609","hashOfConfig":"321"},{"size":790,"mtime":1610287811345,"results":"610","hashOfConfig":"321"},{"size":1440,"mtime":1610287811338,"results":"611","hashOfConfig":"321"},{"size":664,"mtime":1610287811345,"results":"612","hashOfConfig":"321"},{"size":761,"mtime":1609519945207,"results":"613","hashOfConfig":"321"},{"size":3663,"mtime":1609684985336,"results":"614","hashOfConfig":"321"},{"size":525,"mtime":1610287811348,"results":"615","hashOfConfig":"321"},{"size":1505,"mtime":1610287811348,"results":"616","hashOfConfig":"321"},{"size":1535,"mtime":1610287811347,"results":"617","hashOfConfig":"321"},{"size":4533,"mtime":1610287811342,"results":"618","hashOfConfig":"321"},{"size":1586,"mtime":1609768347539,"results":"619","hashOfConfig":"321"},{"size":1893,"mtime":1609949421099,"results":"620","hashOfConfig":"321"},{"size":62,"mtime":1609763233580,"results":"621","hashOfConfig":"321"},{"size":966,"mtime":1610287811347,"results":"622","hashOfConfig":"321"},{"size":1847,"mtime":1610287811340,"results":"623","hashOfConfig":"321"},{"size":963,"mtime":1610287811347,"results":"624","hashOfConfig":"321"},{"size":2220,"mtime":1610287811341,"results":"625","hashOfConfig":"321"},{"size":966,"mtime":1609767933232,"results":"626","hashOfConfig":"321"},{"size":703,"mtime":1610287811347,"results":"627","hashOfConfig":"321"},{"size":2128,"mtime":1610287811341,"results":"628","hashOfConfig":"321"},{"size":960,"mtime":1609950489893,"results":"629","hashOfConfig":"321"},{"size":931,"mtime":1609886553370,"results":"630","hashOfConfig":"321"},{"size":3790,"mtime":1609887884920,"results":"631","hashOfConfig":"321"},{"size":5631,"mtime":1610287811346,"results":"632","hashOfConfig":"321"},{"size":7892,"mtime":1610287811338,"results":"633","hashOfConfig":"321"},{"size":1403,"mtime":1609953220903,"results":"634","hashOfConfig":"321"},{"size":2294,"mtime":1610287811348,"results":"635","hashOfConfig":"321"},{"size":502,"mtime":1610287811348,"results":"636","hashOfConfig":"321"},{"size":1519,"mtime":1610287811343,"results":"637","hashOfConfig":"321"},{"size":6996,"mtime":1610287811338,"results":"638","hashOfConfig":"321"},{"size":433,"mtime":1610288244176,"results":"639","hashOfConfig":"321"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vm076o",{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"680"},{"filePath":"681","messages":"682","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"689","messages":"690","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"691","messages":"692","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"693","messages":"694","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"695","messages":"696","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"697","messages":"698","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"703","messages":"704","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"705","messages":"706","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"707","messages":"708","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"709","messages":"710","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"711","messages":"712","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"721","messages":"722","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"723","messages":"724","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"727","messages":"728","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"729","messages":"730","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"731","messages":"732","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"733","messages":"734","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"735","messages":"736","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"737","messages":"738","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"739","messages":"740","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"741","messages":"742","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"743","messages":"744","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"745","messages":"746","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"747","messages":"748","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"749"},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"754"},{"filePath":"755","messages":"756","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"757","messages":"758","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"759","messages":"760","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"761","messages":"762","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"763","messages":"764","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"765","messages":"766","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"767","messages":"768","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"769","messages":"770","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"771","messages":"772","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"773","messages":"774","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"775","messages":"776","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"777","messages":"778","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"799","messages":"800","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"807","messages":"808","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"809"},{"filePath":"810","messages":"811","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"812","messages":"813","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"814"},{"filePath":"815","messages":"816","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"817"},{"filePath":"818","messages":"819","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"820","messages":"821","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"822","messages":"823","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"824"},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"833","messages":"834","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"835","messages":"836","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"843","messages":"844","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"845"},{"filePath":"846","messages":"847","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"848"},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"869","messages":"870","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"871"},{"filePath":"872","messages":"873","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"874","messages":"875","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"876","messages":"877","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"878","messages":"879","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"880","messages":"881","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"882","messages":"883","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"884","messages":"885","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"886","messages":"887","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"888"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"897","messages":"898","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"901","messages":"902","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"903"},{"filePath":"904","messages":"905","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"906","messages":"907","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"908","messages":"909","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"910","messages":"911","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"912","messages":"913","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"914","messages":"915","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"916","messages":"917","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"918","messages":"919","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"920","messages":"921","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"922","messages":"923","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"924","messages":"925","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"926","messages":"927","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"928","messages":"929","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"930"},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"943","messages":"944","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"947","messages":"948","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"949","messages":"950","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"951"},{"filePath":"952","messages":"953","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"954","messages":"955","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"956","messages":"957","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"958","messages":"959","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"960","messages":"961","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"962","messages":"963","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"964","messages":"965","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"966","messages":"967","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"968","messages":"969","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"970","messages":"971","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"972","messages":"973","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"974","messages":"975","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"976","messages":"977","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"978","messages":"979","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"980","messages":"981","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"982","messages":"983","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"984","messages":"985","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"986","messages":"987","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"988","messages":"989","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"990","messages":"991","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"992","messages":"993","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"994","messages":"995","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"996","messages":"997","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"998","messages":"999","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1000","messages":"1001","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1002","messages":"1003","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1004","messages":"1005","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1006","messages":"1007","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1008","messages":"1009","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1010","messages":"1011","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1012","messages":"1013","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1014","messages":"1015","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1016","messages":"1017","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1018","messages":"1019","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1020","messages":"1021","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1022","messages":"1023","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1024","messages":"1025","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1026"},{"filePath":"1027","messages":"1028","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1029","messages":"1030","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1031","messages":"1032","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1033","messages":"1034","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1035","messages":"1036","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1037","messages":"1038","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1039","messages":"1040","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1041","messages":"1042","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1043"},{"filePath":"1044","messages":"1045","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1046","messages":"1047","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1048","messages":"1049","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1050","messages":"1051","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1052"},{"filePath":"1053","messages":"1054","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1055","messages":"1056","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1057","messages":"1058","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1059","messages":"1060","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1061","messages":"1062","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1063","messages":"1064","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1065","messages":"1066","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1067","messages":"1068","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1069","messages":"1070","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1071","messages":"1072","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1073","messages":"1074","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1075"},{"filePath":"1076","messages":"1077","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1078"},{"filePath":"1079","messages":"1080","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1081","messages":"1082","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1083","messages":"1084","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1085","messages":"1086","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1087","messages":"1088","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1089","messages":"1090","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1091","messages":"1092","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1093","messages":"1094","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1095","messages":"1096","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1097","messages":"1098","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1099","messages":"1100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1101","messages":"1102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1103","messages":"1104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1105","messages":"1106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1107","messages":"1108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1109","messages":"1110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1111","messages":"1112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1113","messages":"1114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1115","messages":"1116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1117","messages":"1118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1119","messages":"1120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1121","messages":"1122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1123","messages":"1124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1125","messages":"1126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1127","messages":"1128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1129","messages":"1130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1131","messages":"1132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1133","messages":"1134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1135","messages":"1136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1137","messages":"1138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1139","messages":"1140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1141","messages":"1142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1143","messages":"1144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1145","messages":"1146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1147","messages":"1148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1149","messages":"1150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1151","messages":"1152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1153","messages":"1154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1155","messages":"1156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1157","messages":"1158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1159","messages":"1160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1161","messages":"1162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1163","messages":"1164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1165","messages":"1166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1167","messages":"1168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1169","messages":"1170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1171","messages":"1172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1173","messages":"1174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1175","messages":"1176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1177","messages":"1178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1179"},{"filePath":"1180","messages":"1181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1182","messages":"1183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1184","messages":"1185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1186","messages":"1187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1188","messages":"1189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1190","messages":"1191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1192","messages":"1193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1194","messages":"1195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1196","messages":"1197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1198","messages":"1199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1200"},{"filePath":"1201","messages":"1202","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1203"},{"filePath":"1204","messages":"1205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1206","messages":"1207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1208","messages":"1209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1210","messages":"1211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1212","messages":"1213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1214","messages":"1215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1216","messages":"1217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1218","messages":"1219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1220","messages":"1221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1222","messages":"1223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1224","messages":"1225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1226","messages":"1227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1228","messages":"1229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1230","messages":"1231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1232","messages":"1233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1234","messages":"1235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1236","messages":"1237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1238","messages":"1239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1240","messages":"1241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1242","messages":"1243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1244","messages":"1245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1246","messages":"1247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1248","messages":"1249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1250","messages":"1251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1252","messages":"1253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1254","messages":"1255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1256","messages":"1257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1258","messages":"1259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1260","messages":"1261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1262","messages":"1263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1264","messages":"1265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1266","messages":"1267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1268","messages":"1269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1270","messages":"1271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1272","messages":"1273","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1274","messages":"1275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1276","messages":"1277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1278","messages":"1279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1280","messages":"1281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1282","messages":"1283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1284","messages":"1285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1286","messages":"1287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1288","messages":"1289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1290","messages":"1291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1292","messages":"1293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1294","messages":"1295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1296","messages":"1297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1298","messages":"1299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/michaelwhelehan/workspace/marketplace/src/App.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/ConversationConnected.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/Conversation.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessage.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessageCreate.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessageDelete.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessageUpdate.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationMessages.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/ConversationSubscription.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/CreateConversationMessage.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/DeleteConversationMessage.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/gqlTypes/EditConversationMessage.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/mutations.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/queries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Conversation/useConversationSubscribeMore.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/CreateTask.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/Step1.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/Step2.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/Step3.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/FilterForm/useFilterForm.tsx",["1300"],"import React, { useEffect } from 'react'\nimport FormField from '../../uiComponents/molecules/FormField'\nimport TextFieldIcon from '../../uiComponents/molecules/TextFieldIcon'\nimport SliderField from '../../uiComponents/atoms/SliderField'\nimport RadioField from '../../uiComponents/atoms/RadioField'\nimport styled from 'styled-components'\nimport { useForm, Controller } from 'react-hook-form'\nimport useUrlQueries from '../../hooks/useUrlQueries'\nimport { valueToPercent } from '../../utils/helpers'\nimport SelectField from '../../uiComponents/atoms/SelectField'\nimport { useGetSkillTagsQuery } from '../../queries'\n\nconst WhereWrapper = styled.div`\n  display: flex;\n\n  > label {\n    margin-right: 10px;\n  }\n`\n\ntype FormValues = {\n  where: string\n  suburb: string\n  distance: number\n  budget: number[]\n}\n\nconst useFilterForm = () => {\n  const distanceRange = 100\n  const budgetRange = 20000\n  const { params } = useUrlQueries({\n    allowedParams: ['where', 'suburb', 'distance', 'budget_gte', 'budget_lte'],\n  })\n  const formValues = {\n    where: params.where || 'all',\n    suburb: params.suburb || '',\n    distance: params.distance\n      ? valueToPercent(params.distance, distanceRange)\n      : 30,\n    budget:\n      params.budget_gte && params.budget_lte\n        ? [\n            valueToPercent(params.budget_gte, budgetRange),\n            valueToPercent(params.budget_lte, budgetRange),\n          ]\n        : [5, 80],\n  }\n  const { register, control, handleSubmit, reset } = useForm<FormValues>({\n    defaultValues: formValues,\n  })\n  const { data: SkillTags } = useGetSkillTagsQuery()\n\n  useEffect(() => {\n    reset(formValues)\n  }, [params.budget_gte, params.budget_lte])\n\n  const renderedFilterForm = (\n    <form>\n      <FormField label=\"Where\">\n        <WhereWrapper>\n          <RadioField\n            name=\"where\"\n            ref={register()}\n            label=\"In Person\"\n            value=\"in-person\"\n          />\n          <RadioField\n            name=\"where\"\n            ref={register()}\n            label=\"Online\"\n            value=\"online\"\n          />\n          <RadioField name=\"where\" ref={register()} label=\"All\" value=\"all\" />\n        </WhereWrapper>\n      </FormField>\n      <FormField label=\"Skills\" spacingTop>\n        <Controller\n          as={SelectField}\n          name=\"skills\"\n          control={control}\n          placeholder=\"Select skills\"\n          isMulti\n          options={SkillTags?.skillTags.edges.map((edge) => ({\n            label: edge.node.name,\n            value: edge.node.id,\n          }))}\n        />\n      </FormField>\n      <FormField label=\"Suburb\" spacingTop>\n        <TextFieldIcon\n          ref={register()}\n          name=\"suburb\"\n          iconName=\"MdPlace\"\n          placeholder=\"Enter a surburb\"\n          fullWidth\n        />\n      </FormField>\n      <FormField label=\"Distance\" spacingTop spacingBottom>\n        <Controller\n          name=\"distance\"\n          control={control}\n          render={({ onChange, value }) => (\n            <SliderField\n              value={value}\n              onChange={onChange}\n              range={distanceRange}\n              unit=\"mi\"\n            />\n          )}\n        />\n      </FormField>\n      <FormField label=\"Job Budget\" spacingTop spacingBottom>\n        <Controller\n          name=\"budget\"\n          control={control}\n          render={({ onChange, value }) => (\n            <SliderField\n              value={value}\n              onChange={onChange}\n              range={budgetRange}\n              unit=\"$\"\n            />\n          )}\n        />\n      </FormField>\n    </form>\n  )\n\n  return {\n    renderedFilterForm,\n    onFilterFormSubmit: handleSubmit,\n  }\n}\n\nexport default useFilterForm\n","/Users/michaelwhelehan/workspace/marketplace/src/components/FilterHeader/FilterDropdown.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/FilterHeader/FilterHeader.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Header/Header.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Header/Notifications/Notification.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Header/Notifications/Notifications.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Hire/Hire.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/Layout.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/gqlTypes/CreateTask.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/gqlTypes/Hire.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/gqlTypes/MakeOffer.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Layout/gqlTypes/RejectOffer.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/MakeOffer.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/Step1.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/Step2.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/PaymentMethods/CreditCardForm.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/RejectOffer/RejectOffer.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/constants/app.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/constants/breakpoints.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/constants/sizes.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/contexts/ScrollElementContext.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/core/gqlTypes/PreSignedUploadParams.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/core/queries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/global.d.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/gqlTypes/SkillTag.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/gqlTypes/SkillTags.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/graphql/tasks.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/hooks/useConfirmDialog.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/hooks/useIsMounted.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/hooks/usePageTracking.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/hooks/usePrevious.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/hooks/useTabs.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/hooks/useUrlQueries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/hooks/useWizard.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/index.tsx",["1301"],"import React, { FC } from 'react'\nimport ReactDOM from 'react-dom'\n// import { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client'\nimport App from './App'\nimport { MarketplaceProvider, useAuth } from './services'\nimport { ConfigInput } from './services/types'\nimport { apiUrl, wsUrl } from './constants/app'\nimport { positions, Provider as AlertProvider, useAlert } from 'react-alert'\nimport AlertTemplate from 'react-alert-template-basic'\n\nconst MARKETPLACE_CONFIG: ConfigInput = {\n  apiUrl,\n  wsUrl,\n}\n\nconst notificationOptions = {\n  position: positions.TOP_RIGHT,\n  timeout: 2500,\n}\n\nconst Notifications: FC = () => {\n  const alert = useAlert()\n\n  const { authenticated } = useAuth()\n  const [prevAuthenticated, setPrevAuthenticated] = React.useState<\n    boolean | undefined\n  >()\n\n  React.useEffect(() => {\n    if (prevAuthenticated !== undefined && authenticated !== undefined) {\n      if (!prevAuthenticated && authenticated) {\n        alert.show('You are now logged in', { type: 'success' })\n      } else if (prevAuthenticated && !authenticated) {\n        alert.show('You are now logged out', { type: 'success' })\n      }\n      setPrevAuthenticated(authenticated)\n    } else if (authenticated !== undefined) {\n      setPrevAuthenticated(authenticated)\n    }\n  }, [authenticated])\n\n  return null\n}\n\nconst render = (Component) => {\n  return ReactDOM.render(\n    <AlertProvider template={AlertTemplate as any} {...notificationOptions}>\n      <MarketplaceProvider config={MARKETPLACE_CONFIG}>\n        <>\n          <Component />\n          <Notifications />\n        </>\n      </MarketplaceProvider>\n    </AlertProvider>,\n    document.getElementById('root'),\n  )\n}\n\nrender(App)\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/LoginPage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/PasswordResetPage.tsx",["1302"],"import React, { FC, useEffect } from 'react'\nimport styled from 'styled-components'\nimport BaseContainer from '../../uiComponents/atoms/Container'\nimport Logo from '../../uiComponents/atoms/Logo'\nimport Button from '../../uiComponents/atoms/Button'\nimport TextField from '../../uiComponents/atoms/TextField'\nimport { useForm } from 'react-hook-form'\nimport { Link, useHistory } from 'react-router-dom'\nimport { red } from '../../styles/colors'\nimport { ParagraphS } from '../../uiComponents/atoms/Paragraphs'\nimport { setAuthToken, useSetPassword } from '../../services'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\nimport useUrlQueries from '../../hooks/useUrlQueries'\n\nconst StyledContainer = styled(BaseContainer)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n`\n\nconst LogoContainer = styled.div`\n  height: 64px;\n`\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 10px;\n  width: 300px;\n`\n\nconst ErrorMessage = styled(ParagraphS)`\n  color: ${red};\n`\n\nconst StyledTextField = styled(TextField)`\n  &:not(:first-child) {\n    margin-top: 10px;\n  }\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: 10px;\n`\n\nconst schema = yup.object().shape({\n  password1: yup\n    .string()\n    .min(2, 'Password is too short!')\n    .required('Password is required'),\n  password2: yup\n    .string()\n    .min(2, 'Please retype password')\n    .required('Password confirmation is required')\n    .oneOf([yup.ref('password1')], 'Password confirmation does not match'),\n})\n\ntype FormValues = {\n  password1: string\n  password2: string\n}\n\nconst PasswordResetPage: FC = () => {\n  const { register, handleSubmit, errors: formErrors } = useForm<FormValues>({\n    resolver: yupResolver(schema),\n  })\n  const history = useHistory()\n  const { params } = useUrlQueries({\n    allowedParams: ['email', 'token'],\n  })\n  const [setPassword, { data, error: graphqlErrors }] = useSetPassword()\n  const [loading, setLoading] = React.useState(false)\n  const [errors, setErrors] = React.useState(null)\n\n  useEffect(() => {\n    if (data?.setPassword?.token) {\n      setAuthToken(data.setPassword.token)\n      history.push('/')\n    } else if (graphqlErrors?.extraInfo?.userInputErrors) {\n      setErrors(graphqlErrors.extraInfo.userInputErrors)\n    }\n  }, [data, graphqlErrors])\n\n  const onSubmit = async ({ password1 }) => {\n    setLoading(true)\n    await setPassword({\n      email: params.email,\n      password: password1,\n      token: params.token,\n    })\n    setLoading(false)\n  }\n\n  return (\n    <StyledContainer>\n      <LogoContainer>\n        <Link to=\"/\">\n          <Logo />\n        </Link>\n      </LogoContainer>\n      <StyledForm onSubmit={handleSubmit(onSubmit)}>\n        <ParagraphS>Reset your password</ParagraphS>\n        {errors?.length > 0 &&\n          errors.map((error) => <ErrorMessage>{error.message}</ErrorMessage>)}\n        <StyledTextField\n          name=\"password1\"\n          type=\"password\"\n          ref={register()}\n          fullWidth\n          placeholder=\"Password\"\n          hasError={Boolean(formErrors.password1)}\n        />\n        <StyledTextField\n          name=\"password2\"\n          type=\"password\"\n          ref={register()}\n          fullWidth\n          placeholder=\"Password Confirmation\"\n          hasError={Boolean(formErrors.password2)}\n        />\n        <StyledButton large fullWidth disabled={loading}>\n          {loading ? 'Setting...' : 'Set new password'}\n        </StyledButton>\n      </StyledForm>\n    </StyledContainer>\n  )\n}\n\nexport default PasswordResetPage\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/RequestPasswordResetPage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/SignUpPage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/gqlTypes/RegisterAccount.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/gqlTypes/ResetPasswordRequest.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Auth/mutations.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/DashboardPage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/DashboardPageContainer.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Panels/DashboardFilterPanel.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Panels/DashboardPanel.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Panels/DashboardTabPanel.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/PaymentHistoryPage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/sections/BottomFilterPanel.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/sections/DateFilter.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/sections/TopFilterPanel.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentHistory/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/PaymentMethodsPage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/sections/MakePayments.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/sections/PaymentMethodsHeader.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/sections/PaymentMethodsTabs.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/sections/ReceivePayments.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/PaymentMethods/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/ProfilePage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/gqlTypes/UserDetails.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/gqlTypes/UserProfileDetails.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/queries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/Badges.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/BasicInfo.tsx",["1303","1304","1305"],"import React, { FC, useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useAlert } from 'react-alert'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\nimport {\n  borderColorDark,\n  black,\n  primaryColor,\n  white,\n  primaryFontColor,\n} from '../../../../styles/colors'\nimport {\n  ParagraphM,\n  ParagraphXS,\n} from '../../../../uiComponents/atoms/Paragraphs'\nimport { fwBold } from '../../../../styles/typography'\nimport { useForm, Controller, useFieldArray } from 'react-hook-form'\nimport Avatar from '../../../../uiComponents/atoms/Avatar'\nimport Icon from '../../../../uiComponents/atoms/Icon'\nimport FieldContainer from '../../../../uiComponents/molecules/FieldContainer'\nimport FormField from '../../../../uiComponents/molecules/FormField'\nimport TextField from '../../../../uiComponents/atoms/TextField'\nimport TextAreaField from '../../../../uiComponents/atoms/TextAreaField'\nimport SelectField, {\n  OptionType,\n} from '../../../../uiComponents/atoms/SelectField'\nimport Button from '../../../../uiComponents/atoms/Button'\nimport CheckboxField from '../../../../uiComponents/atoms/CheckboxField'\nimport { UserProfileDetails_me } from '../gqlTypes/UserProfileDetails'\nimport { useAccountUpdate } from '../../../../services'\nimport ChangeAvatar from './ChangeAvatar'\nimport { titleCase } from '../../../../utils/format'\nimport { useGetSkillTagsQuery } from '../../../../queries'\n\nconst StyledForm = styled.form`\n  padding-top: 20px;\n  padding-bottom: 20px;\n`\n\nconst ProfileSplitContainer = styled.div`\n  display: flex;\n`\n\nconst ProfileSplit = styled.div`\n  flex: 1;\n  padding: 20px 40px;\n\n  &:first-child {\n    border-right: 1px solid;\n    border-image: linear-gradient(to top, ${borderColorDark}, rgba(0, 0, 0, 0))\n      1 100%;\n  }\n`\n\nconst ButtonContainer = styled.div`\n  padding-right: 20px;\n  display: flex;\n  justify-content: flex-end;\n`\n\nconst SectionTitle = styled.div`\n  display: flex;\n  align-items: center;\n  height: 75px;\n`\n\nconst AvatarContainer = styled.div`\n  position: relative;\n  cursor: pointer;\n`\n\nconst SectionValue = styled.div`\n  margin-left: 10px;\n`\n\nconst StyledName = styled(ParagraphM)`\n  ${fwBold};\n  color: ${black};\n`\n\nconst HorizontalAlign = styled.div`\n  display: flex;\n`\n\nconst StyledCheckbox = styled(CheckboxField)`\n  margin-right: 10px;\n`\n\nconst EditIcon = styled.div`\n  position: absolute;\n  border-radius: 50%;\n  width: 24px;\n  height: 24px;\n  background-color: ${primaryColor};\n  right: 1px;\n  bottom: 1px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\ntype LanguageType = {\n  id: string\n  language: OptionType\n  level: OptionType\n}\n\ninterface FormValues {\n  firstName: string\n  lastName: string\n  email: string\n  jobTitle: string\n  skills: OptionType[]\n  mobile: string\n  bio: string\n  language: LanguageType[]\n}\n\nconst schema = yup.object().shape({\n  firstName: yup.string().required('First name is required'),\n  lastName: yup.string().required('Last name is required'),\n  jobTitle: yup.string().required('Position is required'),\n})\n\ninterface Props {\n  user: UserProfileDetails_me\n}\n\nconst BasicInfo: FC<Props> = ({ user }) => {\n  const { data: SkillTags } = useGetSkillTagsQuery()\n  const [setAccountUpdate, { data, error }] = useAccountUpdate()\n  const alert = useAlert()\n  const [showChangeAvatar, setShowChangeAvatar] = useState(false)\n  const { register, setError, errors, watch, control, handleSubmit } = useForm<\n    FormValues\n  >({\n    defaultValues: {\n      firstName: user.firstName,\n      lastName: user.lastName,\n      email: user.email,\n      jobTitle: user.jobTitle,\n      mobile: user.mobile,\n      bio: user.bio,\n      skills: user.skills.map((skill) => ({\n        label: skill.name,\n        value: skill.id,\n      })),\n      language: user.languages.map((userLanguage) => {\n        const { id, language, level } = userLanguage\n        return {\n          id,\n          language: {\n            label: language.name,\n            value: language.name,\n          },\n          level: {\n            label: titleCase(level),\n            value: level,\n          },\n        }\n      }),\n    },\n    resolver: yupResolver(schema),\n  })\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'language',\n    keyName: 'identifier',\n  })\n  const watchNamePosition = watch(['firstName', 'lastName', 'jobTitle'])\n\n  useEffect(() => {\n    if (user.languages.length === 0) {\n      append({})\n    }\n  }, [append, user.languages.length])\n\n  useEffect(() => {\n    if (data && !error) {\n      alert.show('Profile successfully updated.', {\n        type: 'success',\n      })\n    } else if (error) {\n      error.extraInfo.userInputErrors.forEach((err) =>\n        setError(err.field, { type: 'manual', message: err.message }),\n      )\n    }\n  }, [data, error, alert, setError])\n\n  const onSubmit = (data: any) => {\n    delete data.email\n    delete data.transport\n    delete data.languages\n    data.skills = data.skills.map((skill) => skill.value)\n    setAccountUpdate({ input: data })\n  }\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <ProfileSplitContainer>\n        <ProfileSplit>\n          <SectionTitle>\n            <AvatarContainer onClick={() => setShowChangeAvatar(true)}>\n              <Avatar src={user.avatarUrl} size={75} />\n              <EditIcon>\n                <Icon name=\"MdEdit\" size={14} color={white} />\n              </EditIcon>\n            </AvatarContainer>\n            <SectionValue>\n              <StyledName>\n                {watchNamePosition.firstName} {watchNamePosition.lastName}\n              </StyledName>\n              <ParagraphXS>{watchNamePosition.jobTitle}</ParagraphXS>\n            </SectionValue>\n          </SectionTitle>\n          <FieldContainer split spacingTop>\n            <FormField label=\"First Name\" error={errors.firstName}>\n              <TextField\n                name=\"firstName\"\n                placeholder=\"Enter your first name\"\n                ref={register()}\n                fullWidth\n                hasError={Boolean(errors.firstName)}\n              />\n            </FormField>\n            <FormField label=\"Last Name\" error={errors.lastName}>\n              <TextField\n                name=\"lastName\"\n                placeholder=\"Enter your last name\"\n                ref={register()}\n                fullWidth\n                hasError={Boolean(errors.lastName)}\n              />\n            </FormField>\n            <FormField label=\"Email\">\n              <TextField\n                name=\"email\"\n                placeholder=\"Enter your email address\"\n                ref={register()}\n                fullWidth\n                readOnly\n              />\n            </FormField>\n            <FormField label=\"Position\" error={errors.jobTitle}>\n              <TextField\n                name=\"jobTitle\"\n                placeholder=\"eg. Software Developer\"\n                ref={register()}\n                fullWidth\n                hasError={Boolean(errors.jobTitle)}\n              />\n            </FormField>\n            <FormField label=\"Mobile\" error={errors.mobile}>\n              <TextField\n                name=\"mobile\"\n                placeholder=\"Enter your mobile number\"\n                ref={register()}\n                fullWidth\n                hasError={Boolean(errors.mobile)}\n              />\n            </FormField>\n            <div style={{ gridColumn: 'span 2' }}>\n              <FormField label=\"Bio\">\n                <TextAreaField\n                  name=\"bio\"\n                  ref={register()}\n                  placeholder=\"Write a short piece about yourself\"\n                  fullWidth\n                />\n              </FormField>\n            </div>\n          </FieldContainer>\n        </ProfileSplit>\n        <ProfileSplit>\n          <SectionTitle>\n            <Icon name=\"MdBuild\" size={60} color={primaryFontColor} />\n            <SectionValue>\n              <StyledName>Skills</StyledName>\n              <ParagraphXS>\n                These are your skills. Keep them updated with any new skills you\n                learn so members know what you can offer.\n              </ParagraphXS>\n            </SectionValue>\n          </SectionTitle>\n          <FieldContainer spacingTop>\n            <FormField label=\"What are you good at?\">\n              <Controller\n                as={SelectField}\n                name=\"skills\"\n                control={control}\n                placeholder=\"eg. Accounting, cleaning, web development\"\n                isMulti\n                options={SkillTags?.skillTags.edges.map((edge) => ({\n                  label: edge.node.name,\n                  value: edge.node.id,\n                }))}\n              />\n            </FormField>\n            {/* <FormField label=\"How do you get around?\" spacingTop>\n              <HorizontalAlign>\n                <StyledCheckbox\n                  name=\"transport\"\n                  label=\"Bicycle\"\n                  value=\"bicycle\"\n                  ref={register()}\n                />\n                <StyledCheckbox\n                  name=\"transport\"\n                  label=\"Car\"\n                  value=\"car\"\n                  ref={register()}\n                />\n                <StyledCheckbox\n                  name=\"transport\"\n                  label=\"Train\"\n                  value=\"train\"\n                  ref={register()}\n                />\n                <StyledCheckbox\n                  name=\"transport\"\n                  label=\"Online\"\n                  value=\"online\"\n                  ref={register()}\n                />\n              </HorizontalAlign>\n            </FormField> */}\n            {fields.map((item, index) => (\n              <FieldContainer key={item.identifier} split spacingTop>\n                <FormField label=\"Language\">\n                  <Controller\n                    as={SelectField}\n                    name={`language[${index}].language`}\n                    control={control}\n                    placeholder=\"Language\"\n                    options={[\n                      { label: 'English', value: 'English' },\n                      { label: 'Afrikaans', value: 'Afrikaans' },\n                      { label: 'Xhosa', value: 'Xhosa' },\n                    ]}\n                  />\n                </FormField>\n                <FormField label=\"Level\">\n                  <Controller\n                    as={SelectField}\n                    name={`language[${index}].level`}\n                    control={control}\n                    placeholder=\"Level\"\n                    options={[\n                      { label: 'Beginner', value: 'BEGINNER' },\n                      { label: 'Professional', value: 'PROFESSIONAL' },\n                      { label: 'Fluent', value: 'FLUENT' },\n                    ]}\n                  />\n                </FormField>\n              </FieldContainer>\n            ))}\n          </FieldContainer>\n        </ProfileSplit>\n      </ProfileSplitContainer>\n      <ButtonContainer>\n        <Button>Update Profile</Button>\n      </ButtonContainer>\n      {showChangeAvatar && (\n        <ChangeAvatar\n          currentAvatar={user.avatarUrl}\n          onUpload={(avatarUrl) => setAccountUpdate({ input: { avatarUrl } })}\n          onClose={() => setShowChangeAvatar(false)}\n        />\n      )}\n    </StyledForm>\n  )\n}\n\nexport default BasicInfo\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/ChangeAvatar.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/Education.tsx",["1306"],"import React, { FC, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { primaryColor } from '../../../../styles/colors'\nimport { useForm, Controller, useFieldArray, FieldError } from 'react-hook-form'\nimport Icon from '../../../../uiComponents/atoms/Icon'\nimport FieldContainer from '../../../../uiComponents/molecules/FieldContainer'\nimport FormField from '../../../../uiComponents/molecules/FormField'\nimport TextField from '../../../../uiComponents/atoms/TextField'\nimport TextAreaField from '../../../../uiComponents/atoms/TextAreaField'\nimport SelectField, {\n  OptionType,\n} from '../../../../uiComponents/atoms/SelectField'\nimport Button from '../../../../uiComponents/atoms/Button'\nimport { UserProfileDetails_me } from '../gqlTypes/UserProfileDetails'\nimport { useAccountUpdate } from '../../../../services'\nimport { useAlert } from 'react-alert'\nimport useConfirmDialog from '../../../../hooks/useConfirmDialog'\nimport { getYearOptions } from '../../../../utils/date'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\nconst StyledForm = styled.form`\n  padding: 20px;\n  width: 50%;\n`\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`\n\nconst StartContainer = styled.div`\n  flex: 1;\n`\n\nconst StyledIcon = styled(Icon)`\n  cursor: pointer;\n`\n\nconst StyledButton = styled(Button)`\n  display: inline-block;\n`\n\nconst ButtonContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n`\n\ntype FormValues = {\n  education: [\n    {\n      degree: string\n      school: string\n      description: string\n      startYear: OptionType\n      endYear: OptionType\n    },\n  ]\n}\n\nconst formSchema = {\n  degree: yup.string().required('Degree is required'),\n  school: yup.string().required('School is required'),\n  startYear: yup\n    .object()\n    .shape({\n      label: yup.string(),\n      value: yup.string(),\n    })\n    .required('Start year is required'),\n  endYear: yup\n    .object()\n    .shape({\n      label: yup.string(),\n      value: yup.string(),\n    })\n    .required('End year is required'),\n}\n\nconst fieldsSchema = yup.object().shape({\n  education: yup\n    .array()\n    .of(yup.object().shape(formSchema))\n    .required('Must have fields')\n    .min(1, 'Minimum of 1 field'),\n})\n\ninterface Props {\n  user: UserProfileDetails_me\n}\n\nconst Education: FC<Props> = ({ user }) => {\n  const [setAccountUpdate, { data, error }] = useAccountUpdate()\n  const alert = useAlert()\n  const { register, control, handleSubmit, setError, errors } = useForm<\n    FormValues\n  >({\n    resolver: yupResolver(fieldsSchema),\n    defaultValues: {\n      education: user.educations.map((education) => {\n        const { startYear, endYear, ...rest } = education\n        return {\n          startYear: { label: startYear, value: startYear },\n          endYear: { label: endYear, value: endYear },\n          ...rest,\n        }\n      }),\n    },\n  })\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'education',\n    keyName: 'identifier',\n  })\n\n  useEffect(() => {\n    if (user.educations.length === 0) {\n      append({})\n    }\n  }, [append, user.educations.length])\n\n  useEffect(() => {\n    if (data && !error) {\n      alert.show('Profile successfully updated.', {\n        type: 'success',\n      })\n    } else if (error) {\n      error.extraInfo.userInputErrors.forEach((err) =>\n        setError(err.field, { type: 'manual', message: err.message }),\n      )\n    }\n  }, [data, error])\n\n  const onSubmit = (data) => {\n    setAccountUpdate({\n      input: {\n        educations: data.education?.map((education) => {\n          let { id, startYear, endYear, ...rest } = education\n          startYear = startYear.value\n          endYear = endYear.value\n          return id\n            ? { id, startYear, endYear, ...rest }\n            : { startYear, endYear, ...rest }\n        }),\n      },\n    })\n  }\n\n  const handleDelete = async (id: number) => {\n    const {\n      data: { errors },\n    } = await setAccountUpdate({\n      input: {\n        deleteEducation: fields[id].id,\n      },\n    })\n    if (errors.length === 0) {\n      remove(id)\n    }\n  }\n\n  const {\n    renderedDialog,\n    setShowConfirmDialog,\n    setConfirmId,\n  } = useConfirmDialog({\n    title: 'Confirm delete education?',\n    onConfirm: handleDelete,\n  })\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <FormField label=\"Add education\">\n        {fields.map((item, index) => (\n          <ItemWrapper key={item.identifier}>\n            <StartContainer>\n              <input\n                type=\"hidden\"\n                name={`education[${index}].id`}\n                ref={register()}\n                defaultValue={item.id}\n              />\n              <FormField\n                label=\"Degree\"\n                error={errors.education?.[index]?.degree}\n                required\n              >\n                <TextField\n                  name={`education[${index}].degree`}\n                  ref={register()}\n                  defaultValue={item.degree}\n                  placeholder=\"Eg. Honor's in Financial Management\"\n                  fullWidth\n                  hasError={Boolean(errors.education?.[index]?.degree)}\n                />\n              </FormField>\n              <FormField\n                label=\"School\"\n                error={errors.education?.[index]?.school}\n                required\n                spacingTop\n              >\n                <TextField\n                  name={`education[${index}].school`}\n                  ref={register()}\n                  defaultValue={item.school}\n                  placeholder=\"Eg. University of Cape Town\"\n                  fullWidth\n                  hasError={Boolean(errors.education?.[index]?.school)}\n                />\n              </FormField>\n              <FieldContainer split spacingTop>\n                <FormField\n                  label=\"Start Year\"\n                  error={errors.education?.[index]?.startYear as FieldError}\n                  required\n                >\n                  <Controller\n                    as={SelectField}\n                    name={`education[${index}].startYear`}\n                    control={control}\n                    placeholder=\"Start Year\"\n                    options={getYearOptions(60)}\n                    hasError={Boolean(errors.education?.[index]?.startYear)}\n                  />\n                </FormField>\n                <FormField\n                  label=\"End Year\"\n                  error={errors.education?.[index]?.endYear as FieldError}\n                  required\n                >\n                  <Controller\n                    as={SelectField}\n                    name={`education[${index}].endYear`}\n                    control={control}\n                    placeholder=\"End Year\"\n                    options={getYearOptions(60)}\n                  />\n                </FormField>\n              </FieldContainer>\n              <FormField label=\"Description\" spacingTop>\n                <TextAreaField\n                  name={`education[${index}].description`}\n                  ref={register()}\n                  defaultValue={item.description}\n                  placeholder=\"Write a brief description of your education here\"\n                  fullWidth\n                />\n              </FormField>\n            </StartContainer>\n            <StyledIcon\n              name=\"MdClose\"\n              size={25}\n              color={primaryColor}\n              spacingStart={5}\n              onClick={() => {\n                if (item.id) {\n                  setConfirmId(index)\n                  setShowConfirmDialog(true)\n                } else {\n                  remove(index)\n                }\n              }}\n            />\n          </ItemWrapper>\n        ))}\n        <StyledButton\n          as=\"a\"\n          styleType=\"primary-outline\"\n          onClick={() => append({})}\n        >\n          {fields.length === 0 ? 'Add education' : 'Add another'}\n        </StyledButton>\n      </FormField>\n      <ButtonContainer>\n        <Button>Update Profile</Button>\n      </ButtonContainer>\n      {renderedDialog}\n    </StyledForm>\n  )\n}\n\nexport default Education\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/Portfolio.tsx",["1307"],"import React, { FC, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { primaryColor } from '../../../../styles/colors'\nimport { useForm, useFieldArray, Controller } from 'react-hook-form'\nimport Icon from '../../../../uiComponents/atoms/Icon'\nimport FormField from '../../../../uiComponents/molecules/FormField'\nimport TextField from '../../../../uiComponents/atoms/TextField'\nimport TextAreaField from '../../../../uiComponents/atoms/TextAreaField'\nimport Button from '../../../../uiComponents/atoms/Button'\nimport FileUploadField from '../../../../uiComponents/atoms/FileUploadField'\nimport { useAccountUpdate } from '../../../../services'\nimport { useAlert } from 'react-alert'\nimport { UserProfileDetails_me } from '../gqlTypes/UserProfileDetails'\nimport useConfirmDialog from '../../../../hooks/useConfirmDialog'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\nconst StyledForm = styled.form`\n  padding: 20px;\n  width: 50%;\n`\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`\n\nconst StartContainer = styled.div`\n  flex: 1;\n`\n\nconst StyledIcon = styled(Icon)`\n  cursor: pointer;\n`\n\nconst StyledButton = styled(Button)`\n  display: inline-block;\n`\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`\n\ntype FormValues = {\n  portfolio: [\n    {\n      title: string\n      description: string\n    },\n  ]\n}\n\nconst formSchema = {\n  title: yup.string().required('Title is required'),\n  description: yup.string().required('Description is required'),\n}\n\nconst fieldsSchema = yup.object().shape({\n  portfolio: yup\n    .array()\n    .of(yup.object().shape(formSchema))\n    .required('Must have fields')\n    .min(1, 'Minimum of 1 field'),\n})\n\ninterface Props {\n  user: UserProfileDetails_me\n}\n\nconst Portfolio: FC<Props> = ({ user }) => {\n  const [setAccountUpdate, { data, error }] = useAccountUpdate()\n  const alert = useAlert()\n  const { register, control, handleSubmit, setError, errors } = useForm<FormValues>({\n    resolver: yupResolver(fieldsSchema),\n    defaultValues: {\n      portfolio: user.portfolios,\n    },\n  })\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'portfolio',\n  })\n\n  useEffect(() => {\n    if (user.portfolios.length === 0) {\n      append({})\n    }\n  }, [append, user.portfolios.length])\n\n  useEffect(() => {\n    if (data && !error) {\n      alert.show('Profile successfully updated.', {\n        type: 'success',\n      })\n    } else if (error) {\n      error.extraInfo.userInputErrors.forEach((err) =>\n        setError(err.field, { type: 'manual', message: err.message }),\n      )\n    }\n  }, [data, error])\n\n  const onSubmit = (data) => {\n    setAccountUpdate({\n      input: {\n        portfolios: data.portfolio?.map((portfolio) => {\n          let { id, ...rest } = portfolio\n          return id ? { id, ...rest } : { ...rest }\n        }),\n      },\n    })\n  }\n\n  const handleDelete = async (id: number) => {\n    const {\n      data: { errors },\n    } = await setAccountUpdate({\n      input: {\n        deletePortfolio: fields[id].id,\n      },\n    })\n    if (errors.length === 0) {\n      remove(id)\n    }\n  }\n\n  const {\n    renderedDialog,\n    setShowConfirmDialog,\n    setConfirmId,\n  } = useConfirmDialog({\n    title: 'Confirm delete portfolio?',\n    onConfirm: handleDelete,\n  })\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <FormField label=\"Add project\">\n        {fields.map((item, index) => (\n          <ItemWrapper key={item.id}>\n            <StartContainer>\n              <input\n                type=\"hidden\"\n                name={`portfolio[${index}].id`}\n                ref={register()}\n                defaultValue={item.id}\n              />\n              <FormField\n                label=\"Title\"\n                error={errors.portfolio?.[index]?.title}\n                required\n              >\n                <TextField\n                  name={`portfolio[${index}].title`}\n                  ref={register()}\n                  defaultValue={item.title}\n                  placeholder=\"Eg. Research on robotics\"\n                  fullWidth\n                  hasError={Boolean(errors.portfolio?.[index]?.title)}\n                />\n              </FormField>\n              <FormField\n                label=\"Description\"\n                error={errors.portfolio?.[index]?.description}\n                required\n                spacingTop\n              >\n                <TextAreaField\n                  name={`portfolio[${index}].description`}\n                  ref={register()}\n                  defaultValue={item.description}\n                  placeholder=\"Describe the project\"\n                  fullWidth\n                  hasError={Boolean(errors.portfolio?.[index]?.description)}\n                />\n              </FormField>\n              <FormField label=\"Cover Image\" spacingTop>\n                <ButtonContainer>\n                  <Controller\n                    name={`portfolio[${index}].imageUrl`}\n                    control={control}\n                    render={({ onChange, value }) => (\n                      <FileUploadField\n                        initialFileUrls={value}\n                        directory=\"portfolio-images\"\n                        accept=\"image/jpg,image/jpeg,image/png\"\n                        autoUpload={!value}\n                        maxFiles={1}\n                        multiple={false}\n                        canCancel\n                        canRemove\n                        onChangeStatus={({ meta }, status) => {\n                          if (status === 'done') {\n                            onChange(encodeURI(meta.fileUrl))\n                          } else if (status === 'removed') {\n                            onChange(null)\n                          }\n                        }}\n                        LayoutComponent={null}\n                        SubmitButtonComponent={null}\n                      />\n                    )}\n                  />\n                </ButtonContainer>\n              </FormField>\n            </StartContainer>\n            <StyledIcon\n              name=\"MdClose\"\n              size={25}\n              color={primaryColor}\n              spacingStart={5}\n              onClick={() => {\n                if (item.id) {\n                  setConfirmId(index)\n                  setShowConfirmDialog(true)\n                } else {\n                  remove(index)\n                }\n              }}\n            />\n          </ItemWrapper>\n        ))}\n        <StyledButton\n          as=\"a\"\n          styleType=\"primary-outline\"\n          onClick={() => append({})}\n        >\n          {fields.length === 0 ? 'Add project' : 'Add another'}\n        </StyledButton>\n      </FormField>\n      <ButtonContainer>\n        <Button>Update Profile</Button>\n      </ButtonContainer>\n      {renderedDialog}\n    </StyledForm>\n  )\n}\n\nexport default Portfolio\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/ProfileHeader.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/ProfileTabs.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/sections/WorkExperience.tsx",["1308"],"import React, { FC, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { primaryColor } from '../../../../styles/colors'\nimport {\n  useForm,\n  Controller,\n  useFieldArray,\n  FieldError,\n} from 'react-hook-form'\nimport Icon from '../../../../uiComponents/atoms/Icon'\nimport FieldContainer from '../../../../uiComponents/molecules/FieldContainer'\nimport FormField from '../../../../uiComponents/molecules/FormField'\nimport TextField from '../../../../uiComponents/atoms/TextField'\nimport TextAreaField from '../../../../uiComponents/atoms/TextAreaField'\nimport SelectField, { OptionType } from '../../../../uiComponents/atoms/SelectField'\nimport Button from '../../../../uiComponents/atoms/Button'\nimport { useAccountUpdate } from '../../../../services'\nimport { useAlert } from 'react-alert'\nimport { UserProfileDetails_me } from '../gqlTypes/UserProfileDetails'\nimport useConfirmDialog from '../../../../hooks/useConfirmDialog'\nimport {\n  getMonthOptions,\n  getYearOptions,\n  getMonthLabel,\n} from '../../../../utils/date'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport * as yup from 'yup'\n\nconst StyledForm = styled.form`\n  padding: 20px;\n  width: 50%;\n`\n\nconst ItemWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  margin-bottom: 20px;\n`\n\nconst StartContainer = styled.div`\n  flex: 1;\n`\n\nconst StyledIcon = styled(Icon)`\n  cursor: pointer;\n`\n\nconst StyledButton = styled(Button)`\n  display: inline-block;\n`\n\nconst ButtonContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n  justify-content: flex-end;\n`\n\ntype FormValues = {\n  experience: [\n    {\n      title: string\n      description?: string\n      company: string\n      location: string\n      startMonth: OptionType\n      startYear: OptionType\n      endMonth: OptionType\n      endYear: OptionType\n    },\n  ]\n}\n\nconst formSchema = {\n  title: yup.string().required('Title is required'),\n  company: yup.string().required('Company is required'),\n  location: yup.string().required('Location is required'),\n  startMonth: yup\n    .object()\n    .shape({\n      label: yup.string(),\n      value: yup.string(),\n    })\n    .required('Start month is required'),\n  startYear: yup\n    .object()\n    .shape({\n      label: yup.string(),\n      value: yup.string(),\n    })\n    .required('Start year is required'),\n  endMonth: yup\n    .object()\n    .shape({\n      label: yup.string(),\n      value: yup.string(),\n    })\n    .required('End month is required'),\n  endYear: yup\n    .object()\n    .shape({\n      label: yup.string(),\n      value: yup.string(),\n    })\n    .required('End year is required'),\n}\n\nconst fieldsSchema = yup.object().shape({\n  experience: yup\n    .array()\n    .of(yup.object().shape(formSchema))\n    .required('Must have fields')\n    .min(1, 'Minimum of 1 field'),\n})\n\ninterface Props {\n  user: UserProfileDetails_me\n}\n\nconst WorkExperience: FC<Props> = ({ user }) => {\n  const [setAccountUpdate, { data, error }] = useAccountUpdate()\n  const alert = useAlert()\n  const { register, control, handleSubmit, setError, errors } = useForm<FormValues>({\n    resolver: yupResolver(fieldsSchema),\n    defaultValues: {\n      experience: user.workExperiences.map((workExperience) => {\n        const { startDate, endDate, ...rest } = workExperience\n        return {\n          startMonth: {\n            label: getMonthLabel(startDate.split('-')[1]),\n            value: startDate.split('-')[1],\n          },\n          startYear: {\n            label: startDate.split('-')[0],\n            value: startDate.split('-')[0],\n          },\n          endMonth: {\n            label: getMonthLabel(endDate.split('-')[1]),\n            value: endDate.split('-')[1],\n          },\n          endYear: {\n            label: endDate.split('-')[0],\n            value: endDate.split('-')[0],\n          },\n          ...rest,\n        }\n      }),\n    },\n  })\n  const { fields, append, remove } = useFieldArray({\n    control,\n    name: 'experience',\n    keyName: 'identifier',\n  })\n\n  useEffect(() => {\n    if (user.workExperiences.length === 0) {\n      append({})\n    }\n  }, [append, user.workExperiences.length])\n\n  useEffect(() => {\n    if (data && !error) {\n      alert.show('Profile successfully updated.', {\n        type: 'success',\n      })\n    } else if (error) {\n      error.extraInfo.userInputErrors.forEach((err) =>\n        setError(err.field, { type: 'manual', message: err.message }),\n      )\n    }\n  }, [data, error])\n\n  const onSubmit = (data) => {\n    setAccountUpdate({\n      input: {\n        workExperiences: data.experience?.map((experience) => {\n          let {\n            id,\n            startMonth,\n            startYear,\n            endMonth,\n            endYear,\n            ...rest\n          } = experience\n          startMonth = startMonth.value\n          startYear = startYear.value\n          endMonth = endMonth.value\n          endYear = endYear.value\n          return id\n            ? { id, startMonth, startYear, endMonth, endYear, ...rest }\n            : { startMonth, startYear, endMonth, endYear, ...rest }\n        }),\n      },\n    })\n  }\n\n  const handleDelete = async (id: number) => {\n    const {\n      data: { errors },\n    } = await setAccountUpdate({\n      input: {\n        deleteWorkExperience: fields[id].id,\n      },\n    })\n    if (errors.length === 0) {\n      remove(id)\n    }\n  }\n\n  const {\n    renderedDialog,\n    setShowConfirmDialog,\n    setConfirmId,\n  } = useConfirmDialog({\n    title: 'Confirm delete portfolio?',\n    onConfirm: handleDelete,\n  })\n\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <FormField label=\"Add experience\">\n        {fields.map((item, index) => (\n          <ItemWrapper key={item.id}>\n            <StartContainer>\n              <input\n                type=\"hidden\"\n                name={`experience[${index}].id`}\n                ref={register()}\n                defaultValue={item.id}\n              />\n              <FormField\n                label=\"Title\"\n                error={errors.experience?.[index]?.title}\n                required\n              >\n                <TextField\n                  name={`experience[${index}].title`}\n                  ref={register()}\n                  defaultValue={item.title}\n                  placeholder=\"Eg. Senior Financial Analyst\"\n                  fullWidth\n                  hasError={Boolean(errors.experience?.[index]?.title)}\n                />\n              </FormField>\n              <FormField\n                label=\"Company\"\n                error={errors.experience?.[index]?.company}\n                required\n                spacingTop\n              >\n                <TextField\n                  name={`experience[${index}].company`}\n                  ref={register()}\n                  defaultValue={item.company}\n                  placeholder=\"Eg. Lawrence Associates\"\n                  fullWidth\n                  hasError={Boolean(errors.experience?.[index]?.company)}\n                />\n              </FormField>\n              <FormField\n                label=\"Location\"\n                error={errors.experience?.[index]?.location}\n                required\n                spacingTop\n              >\n                <TextField\n                  name={`experience[${index}].location`}\n                  ref={register()}\n                  defaultValue={item.location}\n                  placeholder=\"Eg. Cape Town\"\n                  fullWidth\n                  hasError={Boolean(errors.experience?.[index]?.location)}\n                />\n              </FormField>\n              <FieldContainer split spacingTop>\n                <FormField\n                  label=\"Start Month\"\n                  error={errors.experience?.[index]?.startMonth as FieldError}\n                  required\n                >\n                  <Controller\n                    as={SelectField}\n                    name={`experience[${index}].startMonth`}\n                    control={control}\n                    placeholder=\"Start Month\"\n                    options={getMonthOptions()}\n                  />\n                </FormField>\n                <FormField\n                  label=\"Start Year\"\n                  error={errors.experience?.[index]?.startYear as FieldError}\n                  required\n                >\n                  <Controller\n                    as={SelectField}\n                    name={`experience[${index}].startYear`}\n                    control={control}\n                    placeholder=\"Start Year\"\n                    options={getYearOptions(60)}\n                  />\n                </FormField>\n              </FieldContainer>\n              <FieldContainer split spacingTop>\n                <FormField label=\"End Month\">\n                  <Controller\n                    as={SelectField}\n                    name={`experience[${index}].endMonth`}\n                    control={control}\n                    placeholder=\"End Month\"\n                    options={getMonthOptions()}\n                  />\n                </FormField>\n                <FormField label=\"End Year\">\n                  <Controller\n                    as={SelectField}\n                    name={`experience[${index}].endYear`}\n                    control={control}\n                    placeholder=\"End Year\"\n                    options={getYearOptions(60)}\n                  />\n                </FormField>\n              </FieldContainer>\n              <FieldContainer spacingTop>\n                <FormField\n                  label=\"Description\"\n                  error={errors.experience?.[index]?.description as FieldError}\n                >\n                  <TextAreaField\n                    name={`experience[${index}].description`}\n                    ref={register()}\n                    defaultValue={item.description}\n                    placeholder=\"Write a short description of your work experience\"\n                    fullWidth\n                  />\n                </FormField>\n              </FieldContainer>\n            </StartContainer>\n            <StyledIcon\n              name=\"MdClose\"\n              size={25}\n              color={primaryColor}\n              spacingStart={5}\n              onClick={() => {\n                if (item.id) {\n                  setConfirmId(index)\n                  setShowConfirmDialog(true)\n                } else {\n                  remove(index)\n                }\n              }}\n            />\n          </ItemWrapper>\n        ))}\n        <StyledButton\n          as=\"a\"\n          styleType=\"primary-outline\"\n          onClick={() => append({})}\n        >\n          {fields.length === 0 ? 'Add experience' : 'Add another'}\n        </StyledButton>\n      </FormField>\n      <ButtonContainer>\n        <Button>Update Profile</Button>\n      </ButtonContainer>\n      {renderedDialog}\n    </StyledForm>\n  )\n}\n\nexport default WorkExperience\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Profile/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/SettingsPage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/Account.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/NotificationSettings.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/Password.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/SettingsHeader.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/SettingsTabs.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/sections/TaskAlerts.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Settings/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/TaskDetailPage.tsx",["1309"],"import React, { FC, useMemo } from 'react'\nimport styled from 'styled-components'\nimport BaseContainer from '../../../uiComponents/atoms/Container'\nimport TaskDetailHeader from './sections/TaskDetailHeader'\nimport TaskDetailTabs from './sections/TaskDetailTabs'\nimport { TabType } from './types'\nimport useTabs from '../../../hooks/useTabs'\nimport TaskDetailsMain from './sections/TaskDetails/TaskDetailsMain'\nimport TaskDetailsSummary from './sections/TaskDetails/TaskDetailsSummary'\nimport OffersMain from './sections/Offers/OffersMain'\nimport OffersSummary from './sections/Offers/OffersSummary'\nimport HiresMain from './sections/Hires/HiresMain'\nimport HiresSummary from './sections/Hires/HiresSummary'\nimport ProgressMain from './sections/Progress/ProgressMain'\nimport ProgressSummary from './sections/Progress/ProgressSummary'\nimport { DashboardPanelContainer } from '../Panels/DashboardPanel'\nimport { toXL } from '../../../constants/breakpoints'\nimport { useGetTaskQuery } from '../../MarketplaceTDP/queries'\nimport { Route, Switch, useParams, useRouteMatch } from 'react-router-dom'\nimport Loader from '../../../uiComponents/atoms/Loader/Loader'\nimport { useAuth } from '../../../services'\nimport QuestionsMain from './sections/Questions/QuestionsMain'\n\nconst Container = styled(BaseContainer)`\n  @media (${toXL}) {\n    padding: 0 20px;\n  }\n`\n\nconst TopContainer = styled(DashboardPanelContainer)`\n  margin-top: 20px;\n`\n\nconst BottomContainer = styled.div`\n  margin-top: 20px;\n  display: flex;\n`\n\nconst BottomContainerStart = styled.main`\n  flex: 1;\n  margin-right: 20px;\n`\n\nconst BottomContainerEnd = styled.aside`\n  flex-basis: 300px;\n`\n\ninterface MatchParams {\n  taskSlug: string\n  tab: TabType\n}\n\ninterface Props {}\n\nconst TaskDetailPage: FC<Props> = () => {\n  const match = useRouteMatch<MatchParams>('/jobs/:taskSlug/:tab')\n  const parentMatch = useRouteMatch()\n  const { currentTab, updateTab } = useTabs<TabType>({\n    initialTab: match.params.tab,\n    navigateUrl: true,\n  })\n  const { user } = useAuth()\n  const { data, loading } = useGetTaskQuery({\n    slug: match.params.taskSlug,\n  })\n\n  const routes = useMemo(\n    () => [\n      {\n        path: '/details',\n        main: () => <TaskDetailsMain task={data.task} user={user} />,\n        sidebar: () => <TaskDetailsSummary />,\n      },\n      {\n        path: '/questions',\n        main: () => <QuestionsMain task={data.task} />,\n        sidebar: () => <TaskDetailsSummary />,\n      },\n      {\n        path: '/offers',\n        main: () => <OffersMain taskSlug={match.params.taskSlug} />,\n        sidebar: () => <OffersSummary />,\n      },\n      {\n        path: '/hires',\n        main: () => <HiresMain />,\n        sidebar: () => <HiresSummary />,\n      },\n      {\n        path: '/progress',\n        main: () => <ProgressMain />,\n        sidebar: () => <ProgressSummary />,\n      },\n    ],\n    [data?.task, user, match.params.taskSlug],\n  )\n\n  return (\n    <Container>\n      {loading ? (\n        <Loader name=\"Dashboard\" />\n      ) : (\n        <>\n          <TopContainer>\n            <TaskDetailHeader task={data.task} />\n            <TaskDetailTabs\n              task={data.task}\n              user={user}\n              currentTab={currentTab}\n              updateTab={updateTab}\n            />\n          </TopContainer>\n          <BottomContainer>\n            <BottomContainerStart>\n              <Switch>\n                {routes.map((route, index) => (\n                  <Route\n                    key={index}\n                    path={`${parentMatch.path}${route.path}`}\n                    children={<route.main />}\n                  />\n                ))}\n              </Switch>\n            </BottomContainerStart>\n            <BottomContainerEnd>\n              <Switch>\n                {routes.map((route, index) => (\n                  <Route\n                    key={index}\n                    path={`${parentMatch.path}${route.path}`}\n                    children={<route.sidebar />}\n                  />\n                ))}\n              </Switch>\n            </BottomContainerEnd>\n          </BottomContainer>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default TaskDetailPage\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Hires/HiresMain.tsx",["1310"],"import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport OfferCard, { OfferCardSelector } from '../Offers/OfferCard'\n\nconst Container = styled.div`\n  ${OfferCardSelector}:not(:first-child) {\n    margin-top: 15px;\n  }\n`\n\ninterface Props {}\n\nconst HiresMain: FC<Props> = () => {\n  return (\n    <Container>\n      {/* {offers.map((offer, index) => (\n        <OfferCard\n          key={index}\n          offer={offer}\n          action={{\n            title: 'Pay Now',\n            onClick: () => {\n              console.log('click')\n            },\n          }}\n        />\n      ))} */}\n    </Container>\n  )\n}\n\nexport default HiresMain\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Hires/HiresSummary.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Offers/OffersMain.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Offers/OffersSummary.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Progress/ProgressMain.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Progress/ProgressSummary.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/TaskDetailHeader.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/TaskDetailTabs.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/TaskDetails/TaskDetailsMain.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/TaskDetails/TaskDetailsSummary.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/TasksPage.tsx",["1311"],"import React, { FC, useRef } from 'react'\nimport DashboardPageContainer from '../DashboardPageContainer'\nimport { TabType } from './types'\nimport useTabs from '../../../hooks/useTabs'\nimport FilterPanel from './sections/FilterPanel'\nimport styled from 'styled-components'\nimport { HeadingM } from '../../../uiComponents/atoms/Headings'\nimport WindowedTable, {\n  ColumnType,\n} from '../../../uiComponents/molecules/WindowedTable'\nimport faker from 'faker'\nimport Avatar from '../../../uiComponents/atoms/Avatar'\nimport Button from '../../../uiComponents/atoms/Button'\nimport { formatDate } from '../../../utils/date'\nimport { useHistory } from 'react-router-dom'\nimport { black } from '../../../styles/colors'\nimport { useGetUserTasksQuery } from './queries'\nimport { TaskStatusFilter } from '../../../types/task'\nimport Loader from '../../../uiComponents/atoms/Loader/Loader'\n\nconst PageContainer = styled(DashboardPageContainer)`\n  margin-top: 20px;\n  padding: 20px;\n`\n\nconst GridContainer = styled.div`\n  margin-top: 20px;\n`\n\nconst StyledHeading = styled(HeadingM)`\n  color: ${black};\n`\n\nconst TasksPage: FC = () => {\n  const { data, loading } = useGetUserTasksQuery({\n    pageSize: 20,\n    filter: {\n      status: [TaskStatusFilter.OPEN],\n    },\n  })\n  const { currentTab, updateTab } = useTabs<TabType>({ initialTab: 'active' })\n  const scrollElement = useRef(null)\n  const history = useHistory()\n  const columns: ColumnType[] = [\n    {\n      dataKey: 'avatar',\n      width: 60,\n      label: '',\n      cellRenderer: ({ rowData }) => {\n        return <Avatar src={rowData.avatar} size={50} />\n      },\n    },\n    {\n      dataKey: 'title',\n      width: 100,\n      flexGrow: 1,\n      label: '',\n    },\n    {\n      dataKey: 'created',\n      width: 100,\n      label: 'CREATED',\n      cellRenderer: ({ rowData }) => {\n        return formatDate(rowData.created, 'D MMM YYYY')\n      },\n    },\n    {\n      dataKey: 'due',\n      width: 100,\n      label: 'DUE',\n      cellRenderer: ({ rowData }) => {\n        return formatDate(rowData.due, 'D MMM YYYY')\n      },\n    },\n    {\n      dataKey: 'numOffers',\n      width: 75,\n      label: 'OFFERS',\n    },\n    {\n      dataKey: 'averageOffer',\n      width: 100,\n      label: 'AVG. OFFER',\n      cellRenderer: ({ rowData }) => {\n        return `$${rowData.averageOffer}`\n      },\n    },\n    {\n      dataKey: 'href',\n      width: 100,\n      label: 'STATUS',\n      cellRenderer: ({ rowData }) => {\n        return (\n          <Button\n            onClick={() => {\n              history.push(rowData.href)\n            }}\n          >\n            View\n          </Button>\n        )\n      },\n    },\n  ]\n\n  return (\n    <main ref={scrollElement}>\n      <FilterPanel currentTab={currentTab} updateTab={updateTab} />\n      <PageContainer>\n        <StyledHeading>Active Jobs</StyledHeading>\n        <GridContainer>\n          {loading ? (\n            <Loader name=\"Dashboard\" />\n          ) : (\n            <WindowedTable\n              columns={columns}\n              list={data.me.tasks.edges.map(({ node }) => ({\n                avatar: node.owner.avatarUrl,\n                title: node.title,\n                created: node.created,\n                due: node.dueDate,\n                numOffers: node.numOffers,\n                averageOffer: Math.round(Math.random() * 1000),\n                href: `/jobs/${node.slug}/details`,\n              }))}\n              rowHeight={72}\n              scrollElement={scrollElement.current ?? window}\n            />\n          )}\n        </GridContainer>\n      </PageContainer>\n    </main>\n  )\n}\n\nexport default TasksPage\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/sections/FilterPanel.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/AccountSummary.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/ActivityFeed.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/CreditSummary.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/Navigation.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/sections/RecentTasks.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Inbox/InboxPage.tsx",["1312","1313","1314","1315","1316"],"import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport BaseContainer from '../../uiComponents/atoms/Container'\nimport { borderColor, white, primaryFontColor } from '../../styles/colors'\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport Icon from '../../uiComponents/atoms/Icon'\nimport { MAIN_HEADER_HEIGHT } from '../../constants/sizes'\nimport SelectField from '../../uiComponents/atoms/SelectField'\nimport InboxConversation from '../InboxConversation/InboxConversationPage'\nimport { HeadingL } from '../../uiComponents/atoms/Headings'\nimport { ParagraphM } from '../../uiComponents/atoms/Paragraphs'\nimport { INBOX_HEADER_HEIGHT } from '../../constants/sizes'\nimport InboxConversationList from './sections/InboxConversationList'\nimport { gql, useQuery } from '@apollo/client'\nimport { ConversationType } from '../../types/conversation'\n\ninterface ConversationListData {\n  conversationList: {\n    cursor: string\n    conversations: ConversationType[]\n  }\n}\n\ninterface ConversationListVars {\n  cursor: string\n  loadAmount: number\n}\n\nconst StyledContainer = styled(BaseContainer)`\n  border-left: 1px solid ${borderColor};\n  border-right: 1px solid ${borderColor};\n  height: calc(100vh - ${MAIN_HEADER_HEIGHT}px);\n  display: flex;\n`\n\nconst FilterContainer = styled.div`\n  height: ${INBOX_HEADER_HEIGHT}px;\n  padding: 20px 10px 20px 10px;\n  border-bottom: 1px solid ${borderColor};\n`\n\nconst SideContainer = styled.article`\n  flex-basis: 300px;\n  border-right: 1px solid ${borderColor};\n  background-color: ${white};\n`\n\nconst MainContainer = styled.article`\n  flex: 1;\n  background-color: ${white};\n`\n\nconst SelectConversation = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`\n\nconst filterStyles = {\n  control: (styles) => ({\n    ...styles,\n    border: 'none',\n    cursor: 'pointer',\n    width: '180px',\n    padding: 0,\n  }),\n  indicatorSeparator: (styles) => ({ ...styles, backgroundColor: white }),\n  dropdownIndicator: (styles) => ({ ...styles, color: primaryFontColor }),\n  placeholder: (styles) => ({ ...styles, color: primaryFontColor }),\n}\n\n// const GET_CONVERSATION_LIST = gql`\n//   query ConversationList($cursor: String, $loadAmount: Int) {\n//     conversationList(cursor: $cursor, loadAmount: $loadAmount) @client {\n//       cursor\n//       conversations {\n//         id\n//         member {\n//           profilePictureUrl\n//           name\n//           onlineStatus\n//         }\n//         lastMessage {\n//           lastMessageFromMe\n//           lastMessageTimestamp\n//           lastMessageText\n//         }\n//       }\n//     }\n//   }\n// `\n\nconst InboxHint: FC = () => (\n  <SelectConversation>\n    <Icon name=\"MdChat\" size={40} color={primaryFontColor} />\n    <HeadingL>Select a Conversation</HeadingL>\n    <ParagraphM>\n      Try selecting a conversation or searching for someone specific.\n    </ParagraphM>\n  </SelectConversation>\n)\n\nconst InboxPage: FC = () => {\n  const match = useRouteMatch()\n  // const { data, loading, fetchMore } = useQuery<\n  //   ConversationListData,\n  //   ConversationListVars\n  // >(GET_CONVERSATION_LIST, {\n  //   variables: { cursor: undefined, loadAmount: undefined },\n  // })\n\n  return (\n    <StyledContainer>\n      <SideContainer>\n        <FilterContainer>\n          <SelectField\n            placeholder=\"All Conversations\"\n            options={[{ label: 'All Conversations', value: 'all' }]}\n            styles={filterStyles}\n          />\n        </FilterContainer>\n        {/* {!data ? (\n          <>Loading...</>\n        ) : (\n          <InboxConversationList\n            conversationList={data?.conversationList?.conversations}\n            conversationListLoading={loading}\n            onLoadMoreConversations={async (loadAmount) => {\n              await sleep(Math.floor(Math.random() * 1000) + 500)\n              await fetchMore({\n                query: GET_CONVERSATION_LIST,\n                variables: {\n                  cursor: data.conversationList.cursor,\n                  loadAmount,\n                },\n                updateQuery: (\n                  previousResult: {\n                    conversationList: { conversations: any; cursor: string }\n                  },\n                  { fetchMoreResult },\n                ) => {\n                  const previousConversationList =\n                    previousResult.conversationList\n                  const newConversationList = fetchMoreResult.conversationList\n\n                  const newConversationListData = {\n                    ...previousResult.conversationList,\n                    conversations: [\n                      ...previousConversationList.conversations,\n                      ...newConversationList.conversations,\n                    ],\n                    cursor: newConversationList.cursor,\n                    __typename: 'ConversationList',\n                  }\n                  const newData = {\n                    ...previousResult,\n                    conversationList: newConversationListData,\n                  }\n                  return newData\n                },\n              })\n            }}\n          />\n        )} */}\n      </SideContainer>\n      <MainContainer>\n        <Switch>\n          <Route path={`${match.path}/:conversationId`}>\n            <InboxConversation />\n          </Route>\n          <Route path={match.path}>\n            <InboxHint />\n          </Route>\n        </Switch>\n      </MainContainer>\n    </StyledContainer>\n  )\n}\n\nexport default InboxPage\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Inbox/gqlTypes/ConversationList.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Inbox/sections/InboxConversationCard.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Inbox/sections/InboxConversationList.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/InboxConversation/InboxConversationPage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/InboxConversation/sections/InboxConversationDetails.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/InboxConversation/sections/InboxConversationTitle.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/MarketplacePage.tsx",["1317","1318"],"import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport FilterHeader from '../../components/FilterHeader/FilterHeader'\nimport BaseContainer from '../../uiComponents/atoms/Container'\nimport Map from './sections/Map'\nimport SideList from './sections/SideList'\nimport { useRouteMatch, Switch, Route, useLocation } from 'react-router-dom'\nimport TaskDetailPage from '../MarketplaceTDP/TaskDetailPage'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport { MAIN_HEADER_HEIGHT, FILTER_HEADER_HEIGHT } from '../../constants/sizes'\nimport { useGetTasksQuery } from './queries'\nimport { fromXL } from '../../constants/breakpoints'\nimport useUrlQueries from '../../hooks/useUrlQueries'\nimport { TasksVariables } from './gqlTypes/Tasks'\nimport useTaskSubscribeMore from './useTaskSubscribeMore'\nimport { TaskStatusFilter } from '../../types/task'\n\nconst StyledContainer = styled(BaseContainer)`\n  border-left: 1px solid #eee;\n  border-right: 1px solid #eee;\n  height: calc(100vh - ${MAIN_HEADER_HEIGHT}px - ${FILTER_HEADER_HEIGHT}px);\n  display: flex;\n`\n\nconst SideListContainer = styled.article`\n  flex: 3;\n\n  @media (${fromXL}) {\n    flex: 2;\n  }\n`\n\nconst MainContainer = styled.article`\n  flex: 9;\n\n  > div {\n    overflow: hidden;\n    position: relative;\n  }\n`\n\nconst MarketplacePage: FC = () => {\n  const match = useRouteMatch()\n  const location = useLocation()\n  const { params } = useUrlQueries({\n    allowedParams: ['budget_gte', 'budget_lte'],\n  })\n\n  const { data, loading, loadMore, subscribeMore } = useGetTasksQuery({\n    pageSize: 20,\n    filter: {\n      status: [TaskStatusFilter.OPEN, TaskStatusFilter.ASSIGNED],\n      budget: {\n        gte: params.budget_gte,\n        lte: params.budget_lte,\n      },\n    },\n  })\n  const hasData = data?.tasks?.edges?.length > 0\n\n  const { numNewTasks, onLoadNewTasks } = useTaskSubscribeMore({\n    subscribeMore,\n  })\n\n  return (\n    <>\n      <FilterHeader />\n      <StyledContainer>\n        <SideListContainer>\n          <SideList\n            numNewTasks={numNewTasks}\n            onLoadNewTasks={onLoadNewTasks}\n            tasksLoading={loading && !hasData}\n            tasks={data?.tasks?.edges}\n            tasksLoadAmount={20}\n            onLoadMoreTasks={async () => {\n              if (data?.tasks?.pageInfo?.hasNextPage) {\n                loadMore(\n                  (prev, next) => ({\n                    ...prev,\n                    tasks: {\n                      ...prev.tasks,\n                      edges: [...prev.tasks.edges, ...next.tasks.edges],\n                      pageInfo: next.tasks.pageInfo,\n                    },\n                  }),\n                  {\n                    after: data.tasks.pageInfo.endCursor,\n                  },\n                )\n              }\n            }}\n          />\n        </SideListContainer>\n        <MainContainer>\n          <TransitionGroup>\n            <CSSTransition\n              key={location.pathname === '/' ? location.key : ''}\n              classNames=\"slide\"\n              timeout={1000}\n            >\n              <Switch location={location}>\n                <Route path={`${match.path}:taskSlug`}>\n                  <TaskDetailPage />\n                </Route>\n                <Route path={match.path}>\n                  <Map />\n                </Route>\n              </Switch>\n            </CSSTransition>\n          </TransitionGroup>\n        </MainContainer>\n      </StyledContainer>\n    </>\n  )\n}\n\nfunction sleep(ms) {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\nexport default MarketplacePage\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/Task.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/Tasks.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/queries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/sections/Map.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/sections/SideList.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/sections/SideListCard.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/TaskDetailPage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/gqlTypes/Task.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/queries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/sections/TDPHeader.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/sections/TDPOffers.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/MarketplaceTDP/sections/TDPQuestions.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/ProfilePage.tsx",["1319","1320"],"import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport BaseContainer from '../../uiComponents/atoms/Container'\nimport UserPanel from './sections/UserPanel'\nimport InfoPanel, { InfoPanelSelector } from './sections/InfoPanel'\nimport MainPanel from './sections/MainPanel'\nimport ReviewPanel from './sections/ReviewPanel'\nimport { useGetPublicUserProfileQuery } from './queries'\nimport { useRouteMatch } from 'react-router-dom'\nimport { Facebook as FacebookLoader } from 'react-content-loader'\nimport { toXL } from '../../constants/breakpoints'\n\nconst StyledContainer = styled(BaseContainer)`\n  display: flex;\n\n  @media (${toXL}) {\n    padding: 0 20px;\n  }\n`\n\nconst StartContainer = styled.div`\n  margin-top: 20px;\n  margin-right: 20px;\n  flex-basis: 330px;\n\n  ${InfoPanelSelector} {\n    margin-top: 20px;\n  }\n`\n\nconst MiddleContainer = styled.div`\n  margin-top: 20px;\n  flex: 1;\n`\n\nconst EndContainer = styled.div`\n  margin-top: 20px;\n  margin-left: 20px;\n  flex-basis: 330px;\n`\n\ninterface Props {}\n\nconst ProfilePage: FC<Props> = () => {\n  const match = useRouteMatch<{ username: string }>()\n  const { data: User, loading } = useGetPublicUserProfileQuery(\n    match.params.username,\n  )\n\n  if (loading) {\n    return <FacebookLoader />\n  }\n\n  return (\n    <StyledContainer>\n      <StartContainer>\n        <UserPanel user={User.publicUser} />\n        <InfoPanel user={User.publicUser} />\n      </StartContainer>\n      <MiddleContainer>\n        <MainPanel user={User.publicUser} />\n      </MiddleContainer>\n      {/* <EndContainer>\n        <ReviewPanel />\n      </EndContainer> */}\n    </StyledContainer>\n  )\n}\n\nexport default ProfilePage\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/gqlTypes/PublicUserProfile.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/gqlTypes/SkillTag.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/queries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/Educations.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/InfoPanel.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/MainPanel.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/Portfolios.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/ReviewPanel.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/Skills.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/UserPanel.tsx",["1321","1322"],"import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { DashboardPanelContainer } from '../../Dashboard/Panels/DashboardPanel'\nimport { UserType, OnlineStatusType } from '../../../types/user'\nimport UserCard from '../../../uiComponents/molecules/UserCard'\nimport UserStats from '../../../uiComponents/molecules/UserStats'\nimport Button from '../../../uiComponents/atoms/Button'\nimport { PublicUserProfile_publicUser } from '../gqlTypes/PublicUserProfile'\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px 0;\n\n  ${Button}:first-child {\n    margin-right: 10px;\n  }\n`\n\ninterface Props {\n  user: PublicUserProfile_publicUser\n}\n\nconst UserPanel: FC<Props> = ({ user }) => {\n  const userData: UserType = {\n    profilePictureUrl: user.avatarUrl,\n    name: `${user.firstName} ${user.lastName}`,\n    onlineStatus: 'offline' as OnlineStatusType,\n    lastSeen: new Date(),\n    jobTitle: user.jobTitle,\n  }\n  return (\n    <DashboardPanelContainer padded>\n      <UserCard user={userData} />\n      {/* <ButtonContainer>\n        <Button styleType=\"primary-outline\">Message</Button>\n        <Button>Request a Quote</Button>\n      </ButtonContainer>\n      <UserStats /> */}\n    </DashboardPanelContainer>\n  )\n}\n\nexport default UserPanel\n","/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/sections/WorkExperiences.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/queries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/react-app-env.d.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/routes.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/api/APIProxy.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/api/Auth/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/api/Auth/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/api/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/api/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/auth.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/cache.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/client.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/config.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/data/ApolloClientManager/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/data/ApolloClientManager/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/data/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/auth.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/errors.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/gqlTypes/AccountError.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/gqlTypes/User.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/gqlTypes/globalTypes.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/ErrorListener/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/ErrorListener/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/LocalStorageHandler/LocalStorageHandler.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/LocalStorageHandler/Proxy.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/LocalStorageHandler/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/LocalStorageHandler/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/NamedObservable/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/NamedObservable/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/helpers/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Auth/AuthJobs.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Auth/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Jobs.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/JobsManager.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/types.ts",["1323"],"import { IJobs } from './Jobs'\n\nexport interface JobErrorResponse<T> {\n  error?: any\n  type?: T\n}\n\nexport interface JobRunResponse<D, F = undefined> {\n  data?: any\n  dataError?: JobErrorResponse<D>\n}\n\nexport type JobFunctionParameters<\n  G extends keyof IJobs,\n  J extends keyof IJobs[G],\n  T extends IJobs[G][J]\n> = T extends (...args: infer P) => any ? P : never\n","/Users/michaelwhelehan/workspace/marketplace/src/services/links.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/auth.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/AccountUpdate.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/PasswordChange.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/SetPassword.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/TokenAuth.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/VerifyToken.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/index.ts",["1324"],"import {\n  ApolloClient,\n  MutationOptions as ApolloMutationOptions,\n} from '@apollo/client'\n\nimport * as Auth from './auth'\nimport * as User from './user'\n\nimport { SetPassword, SetPasswordVariables } from './gqlTypes/SetPassword'\n\nimport { TokenAuth, TokenAuthVariables } from './gqlTypes/TokenAuth'\n\nimport {\n  PasswordChange,\n  PasswordChangeVariables,\n} from './gqlTypes/PasswordChange'\n\nimport { AccountUpdate, AccountUpdateVariables } from './gqlTypes/AccountUpdate'\nimport {\n  AccountNotificationsUpdate,\n  AccountNotificationsUpdateVariables,\n} from './gqlTypes/AccountNotificationsUpdate'\n\nexport type MutationOptions<TData, TVariables> = Omit<\n  ApolloMutationOptions<TData, TVariables>,\n  'mutation'\n>\n\n// TODO: Add ability to pass custom fragments to mutations\nexport const MUTATIONS = {\n  AccountUpdate: <TCacheShape>(\n    client: ApolloClient<TCacheShape>,\n    options: MutationOptions<AccountUpdate, AccountUpdateVariables>,\n  ) =>\n    client.mutate({\n      mutation: User.accountUpdate,\n      ...options,\n    }),\n  AccountNotificationsUpdate: <TCacheShape>(\n    client: ApolloClient<TCacheShape>,\n    options: MutationOptions<\n      AccountNotificationsUpdate,\n      AccountNotificationsUpdateVariables\n    >,\n  ) =>\n    client.mutate({\n      mutation: User.accountNotificationsUpdate,\n      ...options,\n    }),\n  PasswordChange: <TCacheShape>(\n    client: ApolloClient<TCacheShape>,\n    options: MutationOptions<PasswordChange, PasswordChangeVariables>,\n  ) =>\n    client.mutate({\n      mutation: User.changeUserPassword,\n      ...options,\n    }),\n  SetPassword: <TCacheShape>(\n    client: ApolloClient<TCacheShape>,\n    options: MutationOptions<SetPassword, SetPasswordVariables>,\n  ) =>\n    client.mutate({\n      mutation: User.setPassword,\n      ...options,\n    }),\n  TokenAuth: <TCacheShape>(\n    client: ApolloClient<TCacheShape>,\n    options: MutationOptions<TokenAuth, TokenAuthVariables>,\n  ) =>\n    client.mutate({\n      mutation: Auth.tokenAuthMutation,\n      ...options,\n    }),\n}\n\nexport type MUTATIONS = typeof MUTATIONS\n","/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/user.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/queries/gqlTypes/UserDetails.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/queries/user.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/components/MarketplaceProvider/MarketplaceProvider.tsx",["1325","1326"],"import React, { useEffect, useMemo, useState } from 'react'\nimport { ApolloProvider, ApolloCache } from '@apollo/client'\n\nimport { ApolloConfigInput } from '../../../types'\nimport { MarketplaceManager } from '../../..'\nimport { MarketplaceAPI } from '../../../api'\nimport { MarketplaceContext } from '../../context'\nimport { createMarketplaceCache } from '../../../cache'\n\nimport { IProps } from './types'\nimport { createMarketplaceLinks } from '../../../links'\nimport { createMarketplaceClient } from '../../../client'\n\nconst MarketplaceProvider: React.FC<IProps> = ({\n  apolloConfig: apolloConfigInput,\n  config,\n  children,\n}: IProps) => {\n  const apolloConfig: ApolloConfigInput = {\n    persistCache: true,\n    ...apolloConfigInput,\n  }\n\n  const [cache, setCache] = useState<ApolloCache<any> | null>(null)\n  const [context, setContext] = useState<MarketplaceAPI | null>(null)\n  const [tokenExpired, setTokenExpired] = useState(false)\n\n  /**\n   * Setup Apollo Cache and persist it in local storage by default\n   */\n  useEffect(() => {\n    ;(async () => {\n      const marketplaceCache = apolloConfig?.cache\n        ? apolloConfig.cache\n        : await createMarketplaceCache({\n            persistCache: !!apolloConfig?.persistCache,\n          })\n\n      setCache(marketplaceCache)\n    })()\n  }, [])\n\n  const tokenExpirationCallback = () => {\n    setTokenExpired(true)\n  }\n\n  /**\n   * Setup Apollo Links, Apollo Client and Marketplace Manager\n   */\n  const apolloClient = useMemo(() => {\n    if (cache) {\n      const marketplaceLinks = apolloConfig?.links\n        ? apolloConfig.links\n        : createMarketplaceLinks({\n            apiUrl: config.apiUrl,\n            wsUrl: config.wsUrl,\n            tokenExpirationCallback,\n          })\n\n      const marketplaceClient = createMarketplaceClient(cache, marketplaceLinks)\n\n      const manager = new MarketplaceManager(marketplaceClient, config)\n\n      manager.connect((marketplaceAPI) => setContext({ ...marketplaceAPI }))\n\n      return marketplaceClient\n    }\n    return undefined\n  }, [cache])\n\n  useEffect(() => {\n    if (tokenExpired) {\n      context?.auth.signOut()\n      setTokenExpired(false)\n    }\n  }, [tokenExpired, context])\n\n  if (apolloClient && context) {\n    return (\n      <MarketplaceContext.Provider value={context}>\n        <ApolloProvider client={apolloClient}>{children}</ApolloProvider>\n      </MarketplaceContext.Provider>\n    )\n  }\n  return null\n}\n\nMarketplaceProvider.displayName = 'MarketplaceProvider'\nexport { MarketplaceProvider }\n","/Users/michaelwhelehan/workspace/marketplace/src/services/react/components/MarketplaceProvider/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/components/MarketplaceProvider/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/components/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/context.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/helpers.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/hooks.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/mutations.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/useHook.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/react/useMutation.ts",["1327"],"import { DataProxy, FetchResult } from '@apollo/client'\nimport React from 'react'\n\nimport APIProxy from '../api/APIProxy'\nimport { MutationOptions } from '../mutations'\nimport { useMarketplaceClient } from './helpers'\nimport {\n  ApolloErrorWithUserInput,\n  Options,\n  ReturnData,\n  Variables,\n} from './types'\n\ntype MutationUpdaterFn<TData = Record<string, any>> = (\n  proxy: DataProxy,\n  mutationResult: FetchResult<TData>,\n) => void\n\nexport interface BaseMutationHookOptions<TData, TVariables>\n  extends Omit<MutationOptions<TData, TVariables>, 'update'> {\n  update?: MutationUpdaterFn<TData>\n}\n\nexport type MutationFn<TData, TVariables> = (\n  variables?: TVariables,\n  options?: BaseMutationHookOptions<TData, never>,\n) => Promise<TData | null>\n\nexport interface MutationResult<TData extends { data: any }> {\n  called: boolean\n  data: TData['data'] | null\n  error: ApolloErrorWithUserInput | null\n  loading: boolean\n}\n\n// keep track of called mutation\nconst useMutationTracking = (() => {\n  let mostRecentMutation = 0\n\n  const generateNewMutationId = (): number => {\n    mostRecentMutation += 1\n    return mostRecentMutation\n  }\n\n  const isMostRecentMutation = (mutationId: number) => {\n    return mostRecentMutation === mutationId\n  }\n\n  return () => ({\n    generateNewMutationId,\n    isMostRecentMutation,\n  })\n})()\n\nconst initialState: MutationResult<any> = {\n  called: false,\n  data: null,\n  error: null,\n  loading: false,\n}\n\nconst useMutation = <\n  T extends keyof APIProxy,\n  TVariables extends Variables<T>,\n  TOptions extends Options<T>,\n  TData extends ReturnData<T>\n>(\n  mutation: T,\n  baseVariables: TVariables = {} as any,\n  baseOptions: TOptions = {} as any,\n): [MutationFn<TData, TVariables>, MutationResult<TData>] => {\n  const marketplace = useMarketplaceClient()\n  const { generateNewMutationId, isMostRecentMutation } = useMutationTracking()\n  const [result, setResult] = React.useState<MutationResult<TData>>(\n    initialState,\n  )\n\n  const handleMutationStart = () => {\n    if (!result.loading) {\n      setResult({\n        called: true,\n        data: null,\n        error: null,\n        loading: true,\n      })\n    }\n  }\n\n  const handleMutationError = (\n    error: ApolloErrorWithUserInput,\n    mutationId: number,\n  ) => {\n    if (isMostRecentMutation(mutationId)) {\n      setResult((prevState) => ({\n        ...prevState,\n        error,\n        loading: false,\n      }))\n    }\n  }\n\n  const handleMutationComplete = (data: TData, mutationId: number) => {\n    if (isMostRecentMutation(mutationId)) {\n      setResult((prevState) => ({\n        ...prevState,\n        data,\n        loading: false,\n      }))\n    }\n  }\n\n  const runMutation = React.useCallback(\n    (variables: TVariables, options: TOptions) => {\n      return new Promise((resolve) => {\n        handleMutationStart()\n\n        const mutationId = generateNewMutationId()\n        const apolloVariables = {\n          ...(baseVariables as object),\n          ...(variables as object),\n        }\n\n        const apolloOptions: MutationOptions<any, any> = {\n          ...(baseOptions as object),\n          ...(options as object),\n        }\n\n        ;(marketplace.legacyAPIProxy[mutation] as (\n          variables: any,\n          options: any,\n        ) => Promise<any>)(apolloVariables, apolloOptions)\n          .then((data) => {\n            handleMutationComplete(data.data, mutationId)\n            resolve(data)\n          })\n          .catch((err) => {\n            handleMutationError(err, mutationId)\n            resolve(null)\n          })\n      })\n    },\n    [mutation, baseOptions],\n  ) as MutationFn<TData, TVariables>\n\n  return [runMutation, result]\n}\n\nexport const mutationFactory = <\n  T extends keyof APIProxy,\n  TVariables extends Variables<T>,\n  TOptions extends Options<T>\n>(\n  mutation: T,\n) => (variables?: TVariables, options?: TOptions) =>\n  useMutation(mutation, variables, options)\n","/Users/michaelwhelehan/workspace/marketplace/src/services/react/useQuery.ts",["1328","1329","1330","1331","1332","1333"],"import { isEqual } from 'apollo-utilities'\nimport React from 'react'\n\nimport APIProxy from '../api/APIProxy'\nimport { RequireAtLeastOne } from '../tsHelpers'\nimport { useMarketplaceClient } from './helpers'\nimport { useAuth } from './hooks'\nimport {\n  ApolloErrorWithUserInput,\n  Options,\n  Variables,\n  WatchQueryReturnData,\n} from './types'\n\ntype OmittedOptions<T extends keyof APIProxy> = Omit<\n  Options<T>,\n  'onUpdate' | 'onComplete' | 'onError'\n> & { skip?: boolean }\ntype AdditionalAPI = ReturnType<APIProxy['watchQuery']>\ntype Result<TData> = {\n  data: TData | null\n  loading: boolean\n  error: ApolloErrorWithUserInput | null\n}\n\nconst useQuery = <\n  T extends keyof APIProxy,\n  TVariables extends Variables<T>,\n  TOptions extends OmittedOptions<T>,\n  TData extends WatchQueryReturnData<T>\n>(\n  query: T,\n  variables: TVariables = {} as any,\n  options: TOptions = {} as any,\n) => {\n  const marketplace = useMarketplaceClient()\n  const didMountRef = React.useRef(false)\n  const prevDataRef = React.useRef<TData | null>(null)\n  const prevUnsubRef = React.useRef<any>(null)\n  const { authenticated } = useAuth()\n  const [result, setResult] = React.useState<Result<TData>>({\n    data: null,\n    error: null,\n    loading: true,\n  })\n\n  const setData = React.useCallback((data: TData) => {\n    if (!isEqual(data, prevDataRef.current)) {\n      prevDataRef.current = data\n      setResult({ data, error: null, loading: false })\n    } else {\n      setResult((previousResult) => ({ ...previousResult, loading: false }))\n    }\n  }, [])\n\n  const {\n    unsubscribe,\n    setOptions,\n    refetch: _refetch,\n    loadMore: _loadMore,\n  } = React.useMemo(\n    () =>\n      ((marketplace.legacyAPIProxy[query] as unknown) as AdditionalAPI)(\n        variables,\n        {\n          ...(options as any),\n          onError: (error: ApolloErrorWithUserInput) =>\n            setResult((previousResult) => ({\n              ...previousResult,\n              error,\n              loading: false,\n            })),\n          onUpdate: (data: TData) => {\n            setData(data)\n          },\n        },\n      ),\n    [query, options.skip, authenticated],\n  )\n\n  const refetch = React.useCallback(\n    (refetchVariables?: TVariables) => {\n      setResult({ data: null, error: null, loading: true })\n      _refetch()\n    },\n    [query],\n  )\n\n  const loadMore = React.useCallback(\n    (\n      loadMoreVariables: RequireAtLeastOne<TVariables>,\n      mergeResults: boolean = true,\n    ) => {\n      if (_loadMore) {\n        setResult((previousResult) => ({\n          ...previousResult,\n          error: null,\n          loading: true,\n        }))\n        _loadMore(loadMoreVariables, mergeResults)\n      }\n    },\n    [query],\n  )\n\n  React.useEffect(() => {\n    // skip on initial mount\n    if (didMountRef.current) {\n      refetch(variables)\n    } else {\n      didMountRef.current = true\n    }\n  }, [JSON.stringify(variables)])\n\n  // unsubscribe from watcher on dismount\n  React.useEffect(() => {\n    if (prevUnsubRef.current) {\n      prevUnsubRef.current()\n    }\n    prevUnsubRef.current = unsubscribe\n\n    return () => {\n      if (unsubscribe) {\n        unsubscribe()\n      }\n    }\n  }, [options.skip, authenticated])\n\n  return {\n    ...result,\n    loadMore,\n    refetch,\n    setOptions,\n  }\n}\n\nexport const queryWithVariablesFactory = <T extends keyof APIProxy>(\n  query: T,\n) => (variables: Variables<T>, options?: OmittedOptions<T>) =>\n  useQuery(query, variables, options)\n\nexport const queryFactory = <T extends keyof APIProxy>(query: T) => (\n  options?: OmittedOptions<T>,\n) => useQuery(query, undefined, options)\n","/Users/michaelwhelehan/workspace/marketplace/src/services/state/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/state/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/tsHelpers.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/utils.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/setupTests.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/styles/colors.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/styles/global.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/styles/shadows.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/styles/typography.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/types/conversation.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/types/currency.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/types/offer.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/types/review.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/types/tab.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/types/task.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/types/user.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Avatar.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Button.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/CheckboxField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Container.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/DateField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/DropDown.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/FileUploadField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Headings.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Icon.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/LineBreak.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Loader/Loader.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Loader/custom/Dashboard.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Logo.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/MapMarker.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Paragraphs.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/ProgressBar.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/RadioField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Rating.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/RoleToggle.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/SelectField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/SliderField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/StatusIndicator.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Tab.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/TaskStatusIndicator.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/TextAreaField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/TextField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/UpdateIndicator.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/UserName.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/ConfirmDialog.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/FieldContainer.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/FormField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/HireCard.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/InfiniteList.tsx",["1334","1335","1336","1337"],"import React, { FC, useMemo, useState, useRef, useEffect } from 'react'\nimport {\n  InfiniteLoader,\n  List,\n  AutoSizer,\n  CellMeasurer,\n  CellMeasurerCache,\n} from 'react-virtualized'\nimport { deepEquals } from '../../utils/compare'\nimport usePrevious from '../../hooks/usePrevious'\nimport Loader from '../atoms/Loader/Loader'\n\ntype CellSizeGetter = (params: { index: number }) => number\n\ntype CellSize = CellSizeGetter | number\n\ninterface HeightProps {\n  rowHeight: CellSize\n  deferredMeasurementCache?: CellMeasurerCache\n}\n\ninterface Props {\n  rowHeight: number\n  renderListItem: (listItem: any) => JSX.Element\n  onLoadMore: (loadAmount: number) => Promise<any>\n  list: any[]\n  loading?: boolean\n  rowCount?: number\n  overscanRowCount?: number\n  loadAmount?: number\n  direction?: 'forward' | 'reverse'\n  heightCalculation?: 'static' | 'dynamic'\n}\n\nconst InfiniteList: FC<Props> = ({\n  rowHeight,\n  renderListItem,\n  onLoadMore,\n  list,\n  loading = false,\n  rowCount = 100,\n  overscanRowCount = 10,\n  loadAmount = 15,\n  direction = 'forward',\n  heightCalculation = 'static',\n}) => {\n  const infiniteLoader = useRef<InfiniteLoader>(null)\n  const [loadingTop, setLoadingTop] = useState<boolean>(false)\n  const [totalRowCount] = useState<number>(rowCount)\n  const [scrollToIndex, setScrollToIndex] = useState<number>(\n    direction === 'forward' ? -1 : list.length - 1,\n  )\n  const [ready, setReady] = useState<boolean>(false)\n  const prevList = usePrevious(list)\n  const cache = useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: rowHeight,\n      }),\n    [rowHeight, list.length!],\n  )\n\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      setReady(true)\n    }, 500)\n\n    return () => {\n      clearTimeout(timeoutId)\n      setReady(false)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (prevList) {\n      const firstChanged = !deepEquals(list[0], prevList[0])\n      const lastChanged = !deepEquals(\n        list[list.length - 1],\n        prevList[prevList.length - 1],\n      )\n      if (firstChanged) {\n        setScrollToIndex(loadAmount)\n      } else if (lastChanged) {\n        setScrollToIndex(list.length - 1)\n      }\n    }\n  }, [list, prevList, loadAmount])\n\n  function isRowLoaded({ index }) {\n    return !!list[index]\n  }\n\n  async function loadMoreRowsBottom() {\n    await onLoadMore(loadAmount)\n  }\n\n  async function loadMoreRowsTop({ startIndex }) {\n    // if (ready && startIndex === 0 && !loadingTop) {\n    //   setLoadingTop(true)\n    //   //setScrollToIndex(0)\n    //   await onLoadMore(loadAmount)\n    //   setLoadingTop(false)\n    // }\n  }\n\n  function rowRenderer({ key, index, parent, style }) {\n    if (heightCalculation === 'dynamic') {\n      return (\n        <CellMeasurer\n          key={key}\n          cache={cache}\n          parent={parent}\n          columnIndex={0}\n          rowIndex={index}\n        >\n          {({ registerChild }) => (\n            <div ref={registerChild} style={style}>\n              {renderListItem({ index, ...list[index] })}\n            </div>\n          )}\n        </CellMeasurer>\n      )\n    }\n\n    return (\n      <div key={key} style={style}>\n        {renderListItem({ index, ...list[index] })}\n      </div>\n    )\n  }\n\n  const heightProps: HeightProps = {} as HeightProps\n  if (heightCalculation === 'dynamic') {\n    heightProps.deferredMeasurementCache = cache\n    heightProps.rowHeight = cache.rowHeight\n  } else {\n    heightProps.rowHeight = rowHeight\n  }\n\n  if (loading) {\n    return <Loader name=\"List\" />\n  }\n\n  return (\n    <InfiniteLoader\n      ref={infiniteLoader}\n      isRowLoaded={isRowLoaded}\n      loadMoreRows={({ startIndex, stopIndex }) => {\n        if (\n          direction === 'forward' &&\n          stopIndex === startIndex + loadAmount - 1\n        ) {\n          return loadMoreRowsBottom()\n        }\n        return Promise.resolve()\n      }}\n      rowCount={totalRowCount}\n      threshold={loadAmount}\n    >\n      {({ onRowsRendered, registerChild }) => (\n        <AutoSizer>\n          {({ height, width }) => (\n            <List\n              onRowsRendered={(props) => {\n                if (direction === 'reverse') {\n                  loadMoreRowsTop(props)\n                }\n                onRowsRendered(props)\n              }}\n              overscanRowCount={overscanRowCount}\n              overscanIndicesGetter={({\n                cellCount,\n                overscanCellsCount,\n                scrollDirection,\n                startIndex,\n                stopIndex,\n              }) => {\n                // todo: Come up with a better way to handle this initially when direction === 'reverse'\n                return {\n                  overscanStartIndex: Math.max(0, startIndex - 20),\n                  overscanStopIndex: Math.min(\n                    cellCount - 1,\n                    stopIndex + overscanCellsCount,\n                  ),\n                }\n              }}\n              ref={registerChild}\n              width={width}\n              height={height}\n              rowCount={list.length}\n              rowRenderer={rowRenderer}\n              scrollToIndex={direction === 'forward' ? -1 : scrollToIndex}\n              scrollToAlignment={direction === 'forward' ? 'auto' : 'start'}\n              {...heightProps}\n            />\n          )}\n        </AutoSizer>\n      )}\n    </InfiniteLoader>\n  )\n}\n\nexport default InfiniteList\n","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/Modal.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/Review.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/ReviewSummary.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/TaskDetail/TDPAttachments.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/TaskDetail/TDPDetails.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/TaskDetail/TDPInfo.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/TextFieldIcon.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/UserCard.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/UserStats.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/WindowedList.tsx",["1338"],"import React, { FC, useMemo, MutableRefObject } from 'react'\nimport {\n  WindowScroller,\n  List,\n  CellMeasurerCache,\n  CellMeasurer,\n  AutoSizer,\n} from 'react-virtualized'\n\ntype CellSizeGetter = (params: { index: number }) => number\n\ntype CellSize = CellSizeGetter | number\n\ninterface HeightProps {\n  rowHeight: CellSize\n  deferredMeasurementCache?: CellMeasurerCache\n}\n\ninterface Props {\n  listRef: MutableRefObject<List>\n  cacheRef: MutableRefObject<CellMeasurerCache>\n  rowHeight: number\n  renderListItem: (listItem: any) => JSX.Element\n  onLoadMore: (loadAmount: number) => Promise<any>\n  list: any[]\n  loading?: boolean\n  loadAmount?: number\n  heightCalculation?: 'static' | 'dynamic'\n  scrollElement?: any\n}\n\nconst WindowedList: FC<Props> = ({\n  listRef,\n  cacheRef,\n  rowHeight,\n  renderListItem,\n  onLoadMore,\n  list,\n  loading = false,\n  loadAmount = 15,\n  heightCalculation = 'static',\n  scrollElement = window,\n}) => {\n  const cache = useMemo(\n    () =>\n      new CellMeasurerCache({\n        fixedWidth: true,\n        defaultHeight: rowHeight,\n      }),\n    [rowHeight, list.length!],\n  )\n\n  cacheRef.current = cache\n\n  // async function loadMoreRows() {\n  //   await onLoadMore(loadAmount)\n  // }\n\n  function rowRenderer({ key, index, isScrolling, parent, style }) {\n    if (heightCalculation === 'dynamic') {\n      return (\n        <CellMeasurer\n          key={key}\n          cache={cache}\n          parent={parent}\n          columnIndex={0}\n          rowIndex={index}\n        >\n          {({ registerChild }) => (\n            <div ref={registerChild} style={style}>\n              {renderListItem({ index, ...list[index] })}\n            </div>\n          )}\n        </CellMeasurer>\n      )\n    }\n\n    return (\n      <div key={key} style={style}>\n        {renderListItem({ index, ...list[index] })}\n      </div>\n    )\n  }\n\n  const heightProps: HeightProps = {} as HeightProps\n  if (heightCalculation === 'dynamic') {\n    heightProps.deferredMeasurementCache = cache\n    heightProps.rowHeight = cache.rowHeight\n  } else {\n    heightProps.rowHeight = rowHeight\n  }\n\n  return (\n    <WindowScroller scrollElement={scrollElement}>\n      {({ height, isScrolling, onChildScroll, scrollTop }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <List\n              ref={listRef}\n              autoHeight\n              height={height}\n              isScrolling={isScrolling}\n              onScroll={onChildScroll}\n              rowCount={list.length}\n              rowRenderer={rowRenderer}\n              scrollTop={scrollTop}\n              width={width}\n              overscanRowCount={2}\n              {...heightProps}\n            />\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport default WindowedList\n","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/molecules/WindowedTable.tsx",["1339","1340"],"import React, { FC, useState } from 'react'\nimport {\n  AutoSizer,\n  Table,\n  SortDirection,\n  Column,\n  TableCellRenderer,\n  WindowScroller,\n} from 'react-virtualized'\nimport { borderColor, primaryFontColor } from '../../styles/colors'\nimport 'react-virtualized/styles.css'\n\nexport type ColumnType = {\n  dataKey: string\n  label?: string\n  disableSort?: boolean\n  width: number\n  flexGrow?: number\n  cellRenderer?: TableCellRenderer\n}\n\ninterface Props {\n  columns: ColumnType[]\n  list: unknown[]\n  rowHeight: number\n  scrollElement?: any\n  disableHeader?: boolean\n}\n\nconst WindowedTable: FC<Props> = ({\n  columns,\n  list,\n  rowHeight,\n  scrollElement,\n  disableHeader = false,\n}) => {\n  const [sortBy, setSortBy] = useState('index')\n  const [sortDirection, setSortDirection] = useState(SortDirection.ASC)\n\n  function rowGetter({ index }) {\n    return list[index]\n  }\n\n  function sort({ sortBy, sortDirection }) {}\n\n  function noRowsRenderer() {\n    return <div>No data to show</div>\n  }\n\n  return (\n    <WindowScroller scrollElement={scrollElement}>\n      {({ height, isScrolling, onChildScroll, scrollTop }) => (\n        <AutoSizer disableHeight>\n          {({ width }) => (\n            <Table\n              ref=\"Table\"\n              autoHeight\n              height={height}\n              disableHeader={disableHeader}\n              headerHeight={40}\n              noRowsRenderer={noRowsRenderer}\n              overscanRowCount={10}\n              isScrolling={isScrolling}\n              onChildScroll={onChildScroll}\n              scrollTop={scrollTop}\n              rowHeight={rowHeight}\n              rowGetter={rowGetter}\n              rowCount={list.length}\n              sort={sort}\n              sortBy={sortBy}\n              sortDirection={sortDirection}\n              width={width}\n              gridStyle={{ border: `1px solid ${borderColor}` }}\n              rowStyle={{ borderBottom: `1px solid ${borderColor}` }}\n              headerStyle={{ color: primaryFontColor, textTransform: 'none' }}\n            >\n              {columns.map((column, index) => (\n                <Column\n                  key={index}\n                  style={{\n                    whiteSpace: 'nowrap',\n                    overflow: 'hidden',\n                    textOverflow: 'ellipsis',\n                  }}\n                  {...column}\n                />\n              ))}\n            </Table>\n          )}\n        </AutoSizer>\n      )}\n    </WindowScroller>\n  )\n}\n\nexport default WindowedTable\n","/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/Conversation.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/ConversationMessage.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/ConversationMessageList.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/ConversationTextField.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/gqlTypes/Message.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/organisms/Conversation/gqlTypes/MessageFeed.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/utils/compare.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/utils/date.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/utils/format.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/utils/graphql.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/utils/helpers.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/gqlTypes/TaskCreate.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/mutations.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Task/TaskJobs.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Task/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/jobs/Task/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/api/Task/index.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/api/Task/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/gqlTypes/TaskCreated.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/gqlTypes/TaskUpdate.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/CreateTask/gqlTypes/TaskUpdated.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/sections/UpdateTasks.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/useTaskSubscribeMore.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/DeleteTask.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/EditTask.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/PublishTask.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/TaskSubscription.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/TaskEdges.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/mutations.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/types.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/gqlTypes/OfferMade.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/MakeOffer/gqlTypes/OfferCreate.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/Offer.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Marketplace/gqlTypes/Offers.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/uiComponents/atoms/Loader/custom/Offers.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/gqlTypes/UserTask.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/gqlTypes/UserTasks.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/Tasks/queries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Questions/QuestionsMain.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Dashboard/TaskDetail/sections/Offers/OfferCard.tsx",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Header/gqlTypes/Activity.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Header/gqlTypes/UserActivity.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Header/queries.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/pages/Profile/gqlTypes/PublicUserDetails.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/fragments/gqlTypes/PublicUserBasic.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/services/mutations/gqlTypes/AccountNotificationsUpdate.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Header/gqlTypes/ActivityUpdate.ts",[],"/Users/michaelwhelehan/workspace/marketplace/src/components/Header/mutations.ts",[],{"ruleId":"1341","severity":1,"message":"1342","line":55,"column":6,"nodeType":"1343","endLine":55,"endColumn":44,"suggestions":"1344"},{"ruleId":"1341","severity":1,"message":"1345","line":40,"column":6,"nodeType":"1343","endLine":40,"endColumn":21,"suggestions":"1346"},{"ruleId":"1341","severity":1,"message":"1347","line":86,"column":6,"nodeType":"1343","endLine":86,"endColumn":27,"suggestions":"1348"},{"ruleId":"1349","severity":1,"message":"1350","line":82,"column":7,"nodeType":"1351","messageId":"1352","endLine":82,"endColumn":22},{"ruleId":"1349","severity":1,"message":"1353","line":86,"column":7,"nodeType":"1351","messageId":"1352","endLine":86,"endColumn":21},{"ruleId":"1349","severity":1,"message":"1354","line":166,"column":27,"nodeType":"1351","messageId":"1352","endLine":166,"endColumn":33},{"ruleId":"1341","severity":1,"message":"1355","line":134,"column":6,"nodeType":"1343","endLine":134,"endColumn":19,"suggestions":"1356"},{"ruleId":"1341","severity":1,"message":"1355","line":102,"column":6,"nodeType":"1343","endLine":102,"endColumn":19,"suggestions":"1357"},{"ruleId":"1341","severity":1,"message":"1355","line":171,"column":6,"nodeType":"1343","endLine":171,"endColumn":19,"suggestions":"1358"},{"ruleId":"1349","severity":1,"message":"1359","line":19,"column":25,"nodeType":"1351","messageId":"1352","endLine":19,"endColumn":34},{"ruleId":"1349","severity":1,"message":"1360","line":3,"column":8,"nodeType":"1351","messageId":"1352","endLine":3,"endColumn":17},{"ruleId":"1349","severity":1,"message":"1361","line":11,"column":8,"nodeType":"1351","messageId":"1352","endLine":11,"endColumn":13},{"ruleId":"1349","severity":1,"message":"1362","line":13,"column":8,"nodeType":"1351","messageId":"1352","endLine":13,"endColumn":29},{"ruleId":"1349","severity":1,"message":"1363","line":14,"column":10,"nodeType":"1351","messageId":"1352","endLine":14,"endColumn":13},{"ruleId":"1349","severity":1,"message":"1364","line":14,"column":15,"nodeType":"1351","messageId":"1352","endLine":14,"endColumn":23},{"ruleId":"1349","severity":1,"message":"1365","line":17,"column":11,"nodeType":"1351","messageId":"1352","endLine":17,"endColumn":31},{"ruleId":"1349","severity":1,"message":"1366","line":24,"column":11,"nodeType":"1351","messageId":"1352","endLine":24,"endColumn":31},{"ruleId":"1349","severity":1,"message":"1367","line":14,"column":10,"nodeType":"1351","messageId":"1352","endLine":14,"endColumn":24},{"ruleId":"1349","severity":1,"message":"1368","line":118,"column":10,"nodeType":"1351","messageId":"1352","endLine":118,"endColumn":15},{"ruleId":"1349","severity":1,"message":"1369","line":7,"column":8,"nodeType":"1351","messageId":"1352","endLine":7,"endColumn":19},{"ruleId":"1349","severity":1,"message":"1370","line":36,"column":7,"nodeType":"1351","messageId":"1352","endLine":36,"endColumn":19},{"ruleId":"1349","severity":1,"message":"1371","line":6,"column":8,"nodeType":"1351","messageId":"1352","endLine":6,"endColumn":17},{"ruleId":"1349","severity":1,"message":"1372","line":10,"column":7,"nodeType":"1351","messageId":"1352","endLine":10,"endColumn":22},{"ruleId":"1349","severity":1,"message":"1373","line":8,"column":36,"nodeType":"1351","messageId":"1352","endLine":8,"endColumn":37},{"ruleId":"1374","severity":1,"message":"1375","line":76,"column":13,"nodeType":"1351","messageId":"1376","endLine":76,"endColumn":22},{"ruleId":"1341","severity":1,"message":"1377","line":41,"column":6,"nodeType":"1343","endLine":41,"endColumn":8,"suggestions":"1378"},{"ruleId":"1341","severity":1,"message":"1379","line":69,"column":6,"nodeType":"1343","endLine":69,"endColumn":13,"suggestions":"1380"},{"ruleId":"1341","severity":1,"message":"1381","line":142,"column":5,"nodeType":"1343","endLine":142,"endColumn":28,"suggestions":"1382"},{"ruleId":"1341","severity":1,"message":"1383","line":78,"column":5,"nodeType":"1343","endLine":78,"endColumn":41,"suggestions":"1384"},{"ruleId":"1341","severity":1,"message":"1385","line":86,"column":5,"nodeType":"1343","endLine":86,"endColumn":12,"suggestions":"1386"},{"ruleId":"1341","severity":1,"message":"1387","line":103,"column":5,"nodeType":"1343","endLine":103,"endColumn":12,"suggestions":"1388"},{"ruleId":"1341","severity":1,"message":"1389","line":113,"column":6,"nodeType":"1343","endLine":113,"endColumn":33,"suggestions":"1390"},{"ruleId":"1341","severity":1,"message":"1391","line":113,"column":7,"nodeType":"1392","endLine":113,"endColumn":32},{"ruleId":"1341","severity":1,"message":"1393","line":127,"column":6,"nodeType":"1343","endLine":127,"endColumn":35,"suggestions":"1394"},{"ruleId":"1349","severity":1,"message":"1395","line":48,"column":10,"nodeType":"1351","messageId":"1352","endLine":48,"endColumn":20},{"ruleId":"1349","severity":1,"message":"1396","line":48,"column":22,"nodeType":"1351","messageId":"1352","endLine":48,"endColumn":35},{"ruleId":"1349","severity":1,"message":"1397","line":53,"column":10,"nodeType":"1351","messageId":"1352","endLine":53,"endColumn":15},{"ruleId":"1341","severity":1,"message":"1398","line":61,"column":17,"nodeType":"1399","endLine":61,"endColumn":29},{"ruleId":"1341","severity":1,"message":"1398","line":50,"column":17,"nodeType":"1399","endLine":50,"endColumn":29},{"ruleId":"1349","severity":1,"message":"1400","line":37,"column":18,"nodeType":"1351","messageId":"1352","endLine":37,"endColumn":27},{"ruleId":"1349","severity":1,"message":"1401","line":38,"column":25,"nodeType":"1351","messageId":"1352","endLine":38,"endColumn":41},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'formValues' and 'reset'. Either include them or remove the dependency array.","ArrayExpression",["1402"],"React Hook React.useEffect has missing dependencies: 'alert' and 'prevAuthenticated'. Either include them or remove the dependency array.",["1403"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["1404"],"@typescript-eslint/no-unused-vars","'HorizontalAlign' is assigned a value but never used.","Identifier","unusedVar","'StyledCheckbox' is assigned a value but never used.","'remove' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'alert' and 'setError'. Either include them or remove the dependency array.",["1405"],["1406"],["1407"],"'useParams' is defined but never used.","'OfferCard' is defined but never used.","'faker' is defined but never used.","'InboxConversationList' is defined but never used.","'gql' is defined but never used.","'useQuery' is defined but never used.","'ConversationListData' is defined but never used.","'ConversationListVars' is defined but never used.","'TasksVariables' is defined but never used.","'sleep' is defined but never used.","'ReviewPanel' is defined but never used.","'EndContainer' is assigned a value but never used.","'UserStats' is defined but never used.","'ButtonContainer' is assigned a value but never used.","'F' is defined but never used.","@typescript-eslint/no-redeclare","'MUTATIONS' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'apolloConfig.cache' and 'apolloConfig?.persistCache'. Either include them or remove the dependency array.",["1408"],"React Hook useMemo has missing dependencies: 'apolloConfig.links' and 'config'. Either include them or remove the dependency array.",["1409"],"React Hook React.useCallback has missing dependencies: 'baseVariables', 'generateNewMutationId', 'handleMutationComplete', 'handleMutationError', 'handleMutationStart', and 'marketplace.legacyAPIProxy'. Either include them or remove the dependency array.",["1410"],"React Hook React.useMemo has missing dependencies: 'marketplace.legacyAPIProxy', 'options', 'setData', and 'variables'. Either include them or remove the dependency array.",["1411"],"React Hook React.useCallback has a missing dependency: '_refetch'. Either include it or remove the dependency array.",["1412"],"React Hook React.useCallback has a missing dependency: '_loadMore'. Either include it or remove the dependency array.",["1413"],"React Hook React.useEffect has missing dependencies: 'refetch' and 'variables'. Either include them or remove the dependency array.",["1414"],"React Hook React.useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","React Hook React.useEffect has a missing dependency: 'unsubscribe'. Either include it or remove the dependency array.",["1415"],"'loadingTop' is assigned a value but never used.","'setLoadingTop' is assigned a value but never used.","'ready' is assigned a value but never used.","React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","TSNonNullExpression","'setSortBy' is assigned a value but never used.","'setSortDirection' is assigned a value but never used.",{"desc":"1416","fix":"1417"},{"desc":"1418","fix":"1419"},{"desc":"1420","fix":"1421"},{"desc":"1422","fix":"1423"},{"desc":"1422","fix":"1424"},{"desc":"1422","fix":"1425"},{"desc":"1426","fix":"1427"},{"desc":"1428","fix":"1429"},{"desc":"1430","fix":"1431"},{"desc":"1432","fix":"1433"},{"desc":"1434","fix":"1435"},{"desc":"1436","fix":"1437"},{"desc":"1438","fix":"1439"},{"desc":"1440","fix":"1441"},"Update the dependencies array to be: [formValues, params.budget_gte, params.budget_lte, reset]",{"range":"1442","text":"1443"},"Update the dependencies array to be: [alert, authenticated, prevAuthenticated]",{"range":"1444","text":"1445"},"Update the dependencies array to be: [data, graphqlErrors, history]",{"range":"1446","text":"1447"},"Update the dependencies array to be: [alert, data, error, setError]",{"range":"1448","text":"1449"},{"range":"1450","text":"1449"},{"range":"1451","text":"1449"},"Update the dependencies array to be: [apolloConfig.cache, apolloConfig?.persistCache]",{"range":"1452","text":"1453"},"Update the dependencies array to be: [apolloConfig.links, cache, config]",{"range":"1454","text":"1455"},"Update the dependencies array to be: [handleMutationStart, generateNewMutationId, baseVariables, baseOptions, marketplace.legacyAPIProxy, mutation, handleMutationComplete, handleMutationError]",{"range":"1456","text":"1457"},"Update the dependencies array to be: [marketplace.legacyAPIProxy, query, variables, options, setData]",{"range":"1458","text":"1459"},"Update the dependencies array to be: [_refetch]",{"range":"1460","text":"1461"},"Update the dependencies array to be: [_loadMore]",{"range":"1462","text":"1463"},"Update the dependencies array to be: [refetch, variables]",{"range":"1464","text":"1465"},"Update the dependencies array to be: [options.skip, authenticated, unsubscribe]",{"range":"1466","text":"1467"},[1635,1673],"[formValues, params.budget_gte, params.budget_lte, reset]",[1288,1303],"[alert, authenticated, prevAuthenticated]",[2380,2401],"[data, graphqlErrors, history]",[3492,3505],"[alert, data, error, setError]",[2673,2686],[4394,4407],[1296,1298],"[apolloConfig.cache, apolloConfig?.persistCache]",[2035,2042],"[apolloConfig.links, cache, config]",[3537,3560],"[handleMutationStart, generateNewMutationId, baseVariables, baseOptions, marketplace.legacyAPIProxy, mutation, handleMutationComplete, handleMutationError]",[2092,2128],"[marketplace.legacyAPIProxy, query, variables, options, setData]",[2301,2308],"[_refetch]",[2685,2692],"[_loadMore]",[2867,2894],"[refetch, variables]",[3157,3186],"[options.skip, authenticated, unsubscribe]"]